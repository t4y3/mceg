{"version":3,"sources":["../node_modules/cropperjs/dist/cropper.esm.js","../node_modules/mediancut/dist/mediancut.js","js/Cluster.js","js/app.js"],"names":["Cropper","_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","Array","isArray","arr2","iter","toString","call","from","IN_BROWSER","window","WINDOW","NAMESPACE","ACTION_ALL","ACTION_CROP","ACTION_MOVE","ACTION_ZOOM","ACTION_EAST","ACTION_WEST","ACTION_SOUTH","ACTION_NORTH","ACTION_NORTH_EAST","ACTION_NORTH_WEST","ACTION_SOUTH_EAST","ACTION_SOUTH_WEST","CLASS_CROP","concat","CLASS_DISABLED","CLASS_HIDDEN","CLASS_HIDE","CLASS_INVISIBLE","CLASS_MODAL","CLASS_MOVE","DATA_ACTION","DATA_PREVIEW","DRAG_MODE_CROP","DRAG_MODE_MOVE","DRAG_MODE_NONE","EVENT_CROP","EVENT_CROP_END","EVENT_CROP_MOVE","EVENT_CROP_START","EVENT_DBLCLICK","EVENT_POINTER_DOWN","PointerEvent","EVENT_POINTER_MOVE","EVENT_POINTER_UP","EVENT_READY","EVENT_RESIZE","EVENT_WHEEL","EVENT_ZOOM","MIME_TYPE_JPEG","REGEXP_ACTIONS","REGEXP_DATA_URL","REGEXP_DATA_URL_JPEG","REGEXP_TAG_NAME","DEFAULTS","viewMode","dragMode","initialAspectRatio","NaN","aspectRatio","data","preview","responsive","restore","checkCrossOrigin","checkOrientation","modal","guides","center","highlight","background","autoCrop","autoCropArea","movable","rotatable","scalable","zoomable","zoomOnTouch","zoomOnWheel","wheelZoomRatio","cropBoxMovable","cropBoxResizable","toggleDragModeOnDblclick","minCanvasWidth","minCanvasHeight","minCropBoxWidth","minCropBoxHeight","minContainerWidth","minContainerHeight","ready","cropstart","cropmove","cropend","crop","zoom","TEMPLATE","isNaN","Number","isNumber","value","isUndefined","isObject","hasOwnProperty","isPlainObject","_constructor","e","isFunction","forEach","callback","keys","assign","_len","arguments","args","_key","arg","REGEXP_DECIMALS","normalizeDecimalNumber","times","undefined","test","Math","round","REGEXP_SUFFIX","setStyle","element","styles","style","property","hasClass","classList","contains","className","indexOf","addClass","elem","add","trim","removeClass","remove","replace","toggleClass","added","REGEXP_HYPHENATE","hyphenate","toLowerCase","getData","name","dataset","getAttribute","setData","setAttribute","removeData","removeAttribute","REGEXP_SPACES","onceSupported","supported","once","listener","options","get","set","addEventListener","removeEventListener","removeListener","type","handler","split","event","listeners","addListener","_handler","_element$listeners","_len2","_key2","apply","dispatchEvent","Event","CustomEvent","detail","bubbles","cancelable","document","createEvent","initCustomEvent","getOffset","box","getBoundingClientRect","left","pageXOffset","documentElement","clientLeft","top","pageYOffset","clientTop","location","REGEXP_ORIGINS","isCrossOriginURL","url","parts","match","protocol","hostname","port","addTimestamp","timestamp","Date","getTime","getTransforms","_ref","rotate","scaleX","scaleY","translateX","translateY","values","push","transform","join","WebkitTransform","msTransform","getMaxZoomRatio","pointers","pointers2","ratios","pointer","pointerId","pointer2","x1","abs","startX","y1","startY","x2","endX","y2","endY","z1","sqrt","ratio","sort","a","b","getPointer","_ref2","endOnly","pageX","pageY","end","getPointersCenter","count","_ref3","isFinite","getAdjustedSizes","_ref4","height","width","isValidNumber","adjustedWidth","getRotatedSizes","_ref5","degree","arc","PI","sinArc","sin","cosArc","cos","newWidth","newHeight","getSourceCanvas","image","_ref6","_ref7","_ref8","imageAspectRatio","imageNaturalWidth","naturalWidth","imageNaturalHeight","naturalHeight","_ref6$rotate","_ref6$scaleX","_ref6$scaleY","_ref8$fillColor","fillColor","_ref8$imageSmoothingE","imageSmoothingEnabled","_ref8$imageSmoothingQ","imageSmoothingQuality","_ref8$maxWidth","maxWidth","Infinity","_ref8$maxHeight","maxHeight","_ref8$minWidth","minWidth","_ref8$minHeight","minHeight","canvas","createElement","context","getContext","maxSizes","minSizes","min","max","destMaxSizes","destMinSizes","destWidth","destHeight","params","fillStyle","fillRect","save","translate","scale","drawImage","map","param","floor","fromCharCode","String","getStringFromCharCode","dataView","start","str","getUint8","REGEXP_DATA_URL_HEAD","dataURLToArrayBuffer","dataURL","base64","binary","atob","arrayBuffer","ArrayBuffer","uint8","Uint8Array","charCodeAt","arrayBufferToDataURL","mimeType","chunks","subarray","btoa","resetAndGetOrientation","orientation","DataView","littleEndian","app1Start","ifdStart","offset","byteLength","exifIDCode","tiffOffset","endianness","getUint16","firstIFDOffset","getUint32","_length","_offset","setUint16","parseOrientation","render","initContainer","initCanvas","initCropBox","renderCanvas","cropped","renderCropBox","container","cropper","containerData","offsetWidth","offsetHeight","imageData","rotated","canvasWidth","canvasHeight","canvasData","oldLeft","oldTop","limited","limitCanvas","initialImageData","initialCanvasData","sizeLimited","positionLimited","cropBoxData","_getAdjustedSizes","newCanvasLeft","newCanvasTop","minLeft","minTop","maxLeft","maxTop","changed","transformed","_getRotatedSizes","renderImage","limitCropBox","output","initialCropBoxData","maxCropBoxWidth","maxCropBoxHeight","face","cropBox","disabled","initPreview","crossOrigin","crossOriginUrl","src","viewBox","appendChild","viewBoxImage","previews","ownerDocument","querySelectorAll","querySelector","el","img","html","innerHTML","cssText","resetPreview","cropBoxWidth","cropBoxHeight","originalWidth","originalHeight","getElementsByTagName","events","bind","onCropStart","cropStart","onWheel","wheel","onDblclick","dblclick","onCropMove","cropMove","onCropEnd","cropEnd","onResize","resize","unbind","handlers","getCanvasData","getCropBoxData","setCanvasData","n","setCropBoxData","setDragMode","dragBox","_this","delta","preventDefault","wheeling","setTimeout","deltaY","wheelDelta","action","changedTouches","touch","identifier","originalEvent","cropping","change","right","bottom","renderable","shiftKey","range","x","y","check","side","move","p","methods","reset","clear","hasSameSize","isImg","replaced","uncreate","load","enable","disable","destroy","originalUrl","offsetX","offsetY","_this$canvasData","moveTo","_originalEvent","zoomTo","pivot","oldRatio","rotateTo","_scaleX","_scaleY","rounded","getContainerData","getImageData","sized","widthChanged","heightChanged","getCroppedCanvas","HTMLCanvasElement","source","_this$getData","initialX","initialY","initialWidth","initialHeight","_options$imageSmoothi","sourceWidth","srcWidth","srcHeight","dstX","dstY","dstWidth","dstHeight","sourceHeight","srcX","srcY","setAspectRatio","mode","croppable","AnotherCropper","tagName","Error","reloading","sizing","init","toDataURL","read","clone","xhr","XMLHttpRequest","ontimeout","onabort","onerror","onprogress","getResponseHeader","abort","onload","response","onloadend","open","responseType","withCredentials","send","_parseOrientation","stop","parentNode","insertBefore","nextSibling","_this2","IS_SAFARI","navigator","userAgent","done","build","sizingImage","body","removeChild","template","getElementsByClassName","unbuild","CANVAS_SIZE","GRID_SIZE","CANVAS_DISP_SIZE","K_NUM","DIVISOR","Cluster","highlightList","colorList","canvasHidden","canvasHighlight","getElementById","canvasGrid","canvasResult","canvasCropper","uploadArea","changeHandler","dataTransfer","files","run","drawGrid","file","size","Image","fileReader","FileReader","result","showResult","ctx","clearRect","readAsDataURL","clearHighlight","len","w","imagedata","medianCut","MedianCut","getIndexColors","resultCtx","beginPath","j","jLen","showColors","list","list_child","fragment","createDocumentFragment","li","backgroundColor","colors","highlightColor","strokeStyle","lineWidth","lineTo","stroke","colorIndex","updateColorCode","rect","color","rgb","raw","cnt","uses_colors","parseInt"],"mappings":"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","file":"app.e403d07a.map","sourceRoot":"../src","sourcesContent":["/*!\n * Cropper.js v1.4.3\n * https://fengyuanchen.github.io/cropperjs\n *\n * Copyright 2015-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2018-10-24T13:07:15.032Z\n */\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nvar IN_BROWSER = typeof window !== 'undefined';\nvar WINDOW = IN_BROWSER ? window : {};\nvar NAMESPACE = 'cropper'; // Actions\n\nvar ACTION_ALL = 'all';\nvar ACTION_CROP = 'crop';\nvar ACTION_MOVE = 'move';\nvar ACTION_ZOOM = 'zoom';\nvar ACTION_EAST = 'e';\nvar ACTION_WEST = 'w';\nvar ACTION_SOUTH = 's';\nvar ACTION_NORTH = 'n';\nvar ACTION_NORTH_EAST = 'ne';\nvar ACTION_NORTH_WEST = 'nw';\nvar ACTION_SOUTH_EAST = 'se';\nvar ACTION_SOUTH_WEST = 'sw'; // Classes\n\nvar CLASS_CROP = \"\".concat(NAMESPACE, \"-crop\");\nvar CLASS_DISABLED = \"\".concat(NAMESPACE, \"-disabled\");\nvar CLASS_HIDDEN = \"\".concat(NAMESPACE, \"-hidden\");\nvar CLASS_HIDE = \"\".concat(NAMESPACE, \"-hide\");\nvar CLASS_INVISIBLE = \"\".concat(NAMESPACE, \"-invisible\");\nvar CLASS_MODAL = \"\".concat(NAMESPACE, \"-modal\");\nvar CLASS_MOVE = \"\".concat(NAMESPACE, \"-move\"); // Data keys\n\nvar DATA_ACTION = \"\".concat(NAMESPACE, \"Action\");\nvar DATA_PREVIEW = \"\".concat(NAMESPACE, \"Preview\"); // Drag modes\n\nvar DRAG_MODE_CROP = 'crop';\nvar DRAG_MODE_MOVE = 'move';\nvar DRAG_MODE_NONE = 'none'; // Events\n\nvar EVENT_CROP = 'crop';\nvar EVENT_CROP_END = 'cropend';\nvar EVENT_CROP_MOVE = 'cropmove';\nvar EVENT_CROP_START = 'cropstart';\nvar EVENT_DBLCLICK = 'dblclick';\nvar EVENT_POINTER_DOWN = WINDOW.PointerEvent ? 'pointerdown' : 'touchstart mousedown';\nvar EVENT_POINTER_MOVE = WINDOW.PointerEvent ? 'pointermove' : 'touchmove mousemove';\nvar EVENT_POINTER_UP = WINDOW.PointerEvent ? 'pointerup pointercancel' : 'touchend touchcancel mouseup';\nvar EVENT_READY = 'ready';\nvar EVENT_RESIZE = 'resize';\nvar EVENT_WHEEL = 'wheel mousewheel DOMMouseScroll';\nvar EVENT_ZOOM = 'zoom'; // Mime types\n\nvar MIME_TYPE_JPEG = 'image/jpeg'; // RegExps\n\nvar REGEXP_ACTIONS = /^(?:e|w|s|n|se|sw|ne|nw|all|crop|move|zoom)$/;\nvar REGEXP_DATA_URL = /^data:/;\nvar REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\nvar REGEXP_TAG_NAME = /^(?:img|canvas)$/i;\n\nvar DEFAULTS = {\n  // Define the view mode of the cropper\n  viewMode: 0,\n  // 0, 1, 2, 3\n  // Define the dragging mode of the cropper\n  dragMode: DRAG_MODE_CROP,\n  // 'crop', 'move' or 'none'\n  // Define the initial aspect ratio of the crop box\n  initialAspectRatio: NaN,\n  // Define the aspect ratio of the crop box\n  aspectRatio: NaN,\n  // An object with the previous cropping result data\n  data: null,\n  // A selector for adding extra containers to preview\n  preview: '',\n  // Re-render the cropper when resize the window\n  responsive: true,\n  // Restore the cropped area after resize the window\n  restore: true,\n  // Check if the current image is a cross-origin image\n  checkCrossOrigin: true,\n  // Check the current image's Exif Orientation information\n  checkOrientation: true,\n  // Show the black modal\n  modal: true,\n  // Show the dashed lines for guiding\n  guides: true,\n  // Show the center indicator for guiding\n  center: true,\n  // Show the white modal to highlight the crop box\n  highlight: true,\n  // Show the grid background\n  background: true,\n  // Enable to crop the image automatically when initialize\n  autoCrop: true,\n  // Define the percentage of automatic cropping area when initializes\n  autoCropArea: 0.8,\n  // Enable to move the image\n  movable: true,\n  // Enable to rotate the image\n  rotatable: true,\n  // Enable to scale the image\n  scalable: true,\n  // Enable to zoom the image\n  zoomable: true,\n  // Enable to zoom the image by dragging touch\n  zoomOnTouch: true,\n  // Enable to zoom the image by wheeling mouse\n  zoomOnWheel: true,\n  // Define zoom ratio when zoom the image by wheeling mouse\n  wheelZoomRatio: 0.1,\n  // Enable to move the crop box\n  cropBoxMovable: true,\n  // Enable to resize the crop box\n  cropBoxResizable: true,\n  // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n  toggleDragModeOnDblclick: true,\n  // Size limitation\n  minCanvasWidth: 0,\n  minCanvasHeight: 0,\n  minCropBoxWidth: 0,\n  minCropBoxHeight: 0,\n  minContainerWidth: 200,\n  minContainerHeight: 100,\n  // Shortcuts of events\n  ready: null,\n  cropstart: null,\n  cropmove: null,\n  cropend: null,\n  crop: null,\n  zoom: null\n};\n\nvar TEMPLATE = '<div class=\"cropper-container\" touch-action=\"none\">' + '<div class=\"cropper-wrap-box\">' + '<div class=\"cropper-canvas\"></div>' + '</div>' + '<div class=\"cropper-drag-box\"></div>' + '<div class=\"cropper-crop-box\">' + '<span class=\"cropper-view-box\"></span>' + '<span class=\"cropper-dashed dashed-h\"></span>' + '<span class=\"cropper-dashed dashed-v\"></span>' + '<span class=\"cropper-center\"></span>' + '<span class=\"cropper-face\"></span>' + '<span class=\"cropper-line line-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-line line-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-line line-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-line line-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-point point-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-point point-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-point point-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-ne\" data-cropper-action=\"ne\"></span>' + '<span class=\"cropper-point point-nw\" data-cropper-action=\"nw\"></span>' + '<span class=\"cropper-point point-sw\" data-cropper-action=\"sw\"></span>' + '<span class=\"cropper-point point-se\" data-cropper-action=\"se\"></span>' + '</div>' + '</div>';\n\n/**\n * Check if the given value is not a number.\n */\n\nvar isNaN = Number.isNaN || WINDOW.isNaN;\n/**\n * Check if the given value is a number.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is a number, else `false`.\n */\n\nfunction isNumber(value) {\n  return typeof value === 'number' && !isNaN(value);\n}\n/**\n * Check if the given value is undefined.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\n */\n\nfunction isUndefined(value) {\n  return typeof value === 'undefined';\n}\n/**\n * Check if the given value is an object.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is an object, else `false`.\n */\n\nfunction isObject(value) {\n  return _typeof(value) === 'object' && value !== null;\n}\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check if the given value is a plain object.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\n */\n\nfunction isPlainObject(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n\n  try {\n    var _constructor = value.constructor;\n    var prototype = _constructor.prototype;\n    return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Check if the given value is a function.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is a function, else `false`.\n */\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * Iterate the given data.\n * @param {*} data - The data to iterate.\n * @param {Function} callback - The process function for each element.\n * @returns {*} The original data.\n */\n\nfunction forEach(data, callback) {\n  if (data && isFunction(callback)) {\n    if (Array.isArray(data) || isNumber(data.length)\n    /* array-like */\n    ) {\n        var length = data.length;\n        var i;\n\n        for (i = 0; i < length; i += 1) {\n          if (callback.call(data, data[i], i, data) === false) {\n            break;\n          }\n        }\n      } else if (isObject(data)) {\n      Object.keys(data).forEach(function (key) {\n        callback.call(data, data[key], key, data);\n      });\n    }\n  }\n\n  return data;\n}\n/**\n * Extend the given object.\n * @param {*} obj - The object to be extended.\n * @param {*} args - The rest objects which will be merged to the first object.\n * @returns {Object} The extended object.\n */\n\nvar assign = Object.assign || function assign(obj) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  if (isObject(obj) && args.length > 0) {\n    args.forEach(function (arg) {\n      if (isObject(arg)) {\n        Object.keys(arg).forEach(function (key) {\n          obj[key] = arg[key];\n        });\n      }\n    });\n  }\n\n  return obj;\n};\nvar REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n/**\n * Normalize decimal number.\n * Check out {@link http://0.30000000000000004.com/}\n * @param {number} value - The value to normalize.\n * @param {number} [times=100000000000] - The times for normalizing.\n * @returns {number} Returns the normalized number.\n */\n\nfunction normalizeDecimalNumber(value) {\n  var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n  return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n}\nvar REGEXP_SUFFIX = /^(?:width|height|left|top|marginLeft|marginTop)$/;\n/**\n * Apply styles to the given element.\n * @param {Element} element - The target element.\n * @param {Object} styles - The styles for applying.\n */\n\nfunction setStyle(element, styles) {\n  var style = element.style;\n  forEach(styles, function (value, property) {\n    if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n      value += 'px';\n    }\n\n    style[property] = value;\n  });\n}\n/**\n * Check if the given element has a special class.\n * @param {Element} element - The element to check.\n * @param {string} value - The class to search.\n * @returns {boolean} Returns `true` if the special class was found.\n */\n\nfunction hasClass(element, value) {\n  return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\n}\n/**\n * Add classes to the given element.\n * @param {Element} element - The target element.\n * @param {string} value - The classes to be added.\n */\n\nfunction addClass(element, value) {\n  if (!value) {\n    return;\n  }\n\n  if (isNumber(element.length)) {\n    forEach(element, function (elem) {\n      addClass(elem, value);\n    });\n    return;\n  }\n\n  if (element.classList) {\n    element.classList.add(value);\n    return;\n  }\n\n  var className = element.className.trim();\n\n  if (!className) {\n    element.className = value;\n  } else if (className.indexOf(value) < 0) {\n    element.className = \"\".concat(className, \" \").concat(value);\n  }\n}\n/**\n * Remove classes from the given element.\n * @param {Element} element - The target element.\n * @param {string} value - The classes to be removed.\n */\n\nfunction removeClass(element, value) {\n  if (!value) {\n    return;\n  }\n\n  if (isNumber(element.length)) {\n    forEach(element, function (elem) {\n      removeClass(elem, value);\n    });\n    return;\n  }\n\n  if (element.classList) {\n    element.classList.remove(value);\n    return;\n  }\n\n  if (element.className.indexOf(value) >= 0) {\n    element.className = element.className.replace(value, '');\n  }\n}\n/**\n * Add or remove classes from the given element.\n * @param {Element} element - The target element.\n * @param {string} value - The classes to be toggled.\n * @param {boolean} added - Add only.\n */\n\nfunction toggleClass(element, value, added) {\n  if (!value) {\n    return;\n  }\n\n  if (isNumber(element.length)) {\n    forEach(element, function (elem) {\n      toggleClass(elem, value, added);\n    });\n    return;\n  } // IE10-11 doesn't support the second parameter of `classList.toggle`\n\n\n  if (added) {\n    addClass(element, value);\n  } else {\n    removeClass(element, value);\n  }\n}\nvar REGEXP_HYPHENATE = /([a-z\\d])([A-Z])/g;\n/**\n * Transform the given string from camelCase to kebab-case\n * @param {string} value - The value to transform.\n * @returns {string} The transformed value.\n */\n\nfunction hyphenate(value) {\n  return value.replace(REGEXP_HYPHENATE, '$1-$2').toLowerCase();\n}\n/**\n * Get data from the given element.\n * @param {Element} element - The target element.\n * @param {string} name - The data key to get.\n * @returns {string} The data value.\n */\n\nfunction getData(element, name) {\n  if (isObject(element[name])) {\n    return element[name];\n  }\n\n  if (element.dataset) {\n    return element.dataset[name];\n  }\n\n  return element.getAttribute(\"data-\".concat(hyphenate(name)));\n}\n/**\n * Set data to the given element.\n * @param {Element} element - The target element.\n * @param {string} name - The data key to set.\n * @param {string} data - The data value.\n */\n\nfunction setData(element, name, data) {\n  if (isObject(data)) {\n    element[name] = data;\n  } else if (element.dataset) {\n    element.dataset[name] = data;\n  } else {\n    element.setAttribute(\"data-\".concat(hyphenate(name)), data);\n  }\n}\n/**\n * Remove data from the given element.\n * @param {Element} element - The target element.\n * @param {string} name - The data key to remove.\n */\n\nfunction removeData(element, name) {\n  if (isObject(element[name])) {\n    try {\n      delete element[name];\n    } catch (e) {\n      element[name] = undefined;\n    }\n  } else if (element.dataset) {\n    // #128 Safari not allows to delete dataset property\n    try {\n      delete element.dataset[name];\n    } catch (e) {\n      element.dataset[name] = undefined;\n    }\n  } else {\n    element.removeAttribute(\"data-\".concat(hyphenate(name)));\n  }\n}\nvar REGEXP_SPACES = /\\s\\s*/;\n\nvar onceSupported = function () {\n  var supported = false;\n\n  if (IN_BROWSER) {\n    var once = false;\n\n    var listener = function listener() {};\n\n    var options = Object.defineProperty({}, 'once', {\n      get: function get() {\n        supported = true;\n        return once;\n      },\n\n      /**\n       * This setter can fix a `TypeError` in strict mode\n       * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Getter_only}\n       * @param {boolean} value - The value to set\n       */\n      set: function set(value) {\n        once = value;\n      }\n    });\n    WINDOW.addEventListener('test', listener, options);\n    WINDOW.removeEventListener('test', listener, options);\n  }\n\n  return supported;\n}();\n/**\n * Remove event listener from the target element.\n * @param {Element} element - The event target.\n * @param {string} type - The event type(s).\n * @param {Function} listener - The event listener.\n * @param {Object} options - The event options.\n */\n\n\nfunction removeListener(element, type, listener) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var handler = listener;\n  type.trim().split(REGEXP_SPACES).forEach(function (event) {\n    if (!onceSupported) {\n      var listeners = element.listeners;\n\n      if (listeners && listeners[event] && listeners[event][listener]) {\n        handler = listeners[event][listener];\n        delete listeners[event][listener];\n\n        if (Object.keys(listeners[event]).length === 0) {\n          delete listeners[event];\n        }\n\n        if (Object.keys(listeners).length === 0) {\n          delete element.listeners;\n        }\n      }\n    }\n\n    element.removeEventListener(event, handler, options);\n  });\n}\n/**\n * Add event listener to the target element.\n * @param {Element} element - The event target.\n * @param {string} type - The event type(s).\n * @param {Function} listener - The event listener.\n * @param {Object} options - The event options.\n */\n\nfunction addListener(element, type, listener) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var _handler = listener;\n  type.trim().split(REGEXP_SPACES).forEach(function (event) {\n    if (options.once && !onceSupported) {\n      var _element$listeners = element.listeners,\n          listeners = _element$listeners === void 0 ? {} : _element$listeners;\n\n      _handler = function handler() {\n        delete listeners[event][listener];\n        element.removeEventListener(event, _handler, options);\n\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        listener.apply(element, args);\n      };\n\n      if (!listeners[event]) {\n        listeners[event] = {};\n      }\n\n      if (listeners[event][listener]) {\n        element.removeEventListener(event, listeners[event][listener], options);\n      }\n\n      listeners[event][listener] = _handler;\n      element.listeners = listeners;\n    }\n\n    element.addEventListener(event, _handler, options);\n  });\n}\n/**\n * Dispatch event on the target element.\n * @param {Element} element - The event target.\n * @param {string} type - The event type(s).\n * @param {Object} data - The additional event data.\n * @returns {boolean} Indicate if the event is default prevented or not.\n */\n\nfunction dispatchEvent(element, type, data) {\n  var event; // Event and CustomEvent on IE9-11 are global objects, not constructors\n\n  if (isFunction(Event) && isFunction(CustomEvent)) {\n    event = new CustomEvent(type, {\n      detail: data,\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    event = document.createEvent('CustomEvent');\n    event.initCustomEvent(type, true, true, data);\n  }\n\n  return element.dispatchEvent(event);\n}\n/**\n * Get the offset base on the document.\n * @param {Element} element - The target element.\n * @returns {Object} The offset data.\n */\n\nfunction getOffset(element) {\n  var box = element.getBoundingClientRect();\n  return {\n    left: box.left + (window.pageXOffset - document.documentElement.clientLeft),\n    top: box.top + (window.pageYOffset - document.documentElement.clientTop)\n  };\n}\nvar location = WINDOW.location;\nvar REGEXP_ORIGINS = /^(https?:)\\/\\/([^:/?#]+):?(\\d*)/i;\n/**\n * Check if the given URL is a cross origin URL.\n * @param {string} url - The target URL.\n * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\n */\n\nfunction isCrossOriginURL(url) {\n  var parts = url.match(REGEXP_ORIGINS);\n  return parts && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\n}\n/**\n * Add timestamp to the given URL.\n * @param {string} url - The target URL.\n * @returns {string} The result URL.\n */\n\nfunction addTimestamp(url) {\n  var timestamp = \"timestamp=\".concat(new Date().getTime());\n  return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\n}\n/**\n * Get transforms base on the given object.\n * @param {Object} obj - The target object.\n * @returns {string} A string contains transform values.\n */\n\nfunction getTransforms(_ref) {\n  var rotate = _ref.rotate,\n      scaleX = _ref.scaleX,\n      scaleY = _ref.scaleY,\n      translateX = _ref.translateX,\n      translateY = _ref.translateY;\n  var values = [];\n\n  if (isNumber(translateX) && translateX !== 0) {\n    values.push(\"translateX(\".concat(translateX, \"px)\"));\n  }\n\n  if (isNumber(translateY) && translateY !== 0) {\n    values.push(\"translateY(\".concat(translateY, \"px)\"));\n  } // Rotate should come first before scale to match orientation transform\n\n\n  if (isNumber(rotate) && rotate !== 0) {\n    values.push(\"rotate(\".concat(rotate, \"deg)\"));\n  }\n\n  if (isNumber(scaleX) && scaleX !== 1) {\n    values.push(\"scaleX(\".concat(scaleX, \")\"));\n  }\n\n  if (isNumber(scaleY) && scaleY !== 1) {\n    values.push(\"scaleY(\".concat(scaleY, \")\"));\n  }\n\n  var transform = values.length ? values.join(' ') : 'none';\n  return {\n    WebkitTransform: transform,\n    msTransform: transform,\n    transform: transform\n  };\n}\n/**\n * Get the max ratio of a group of pointers.\n * @param {string} pointers - The target pointers.\n * @returns {number} The result ratio.\n */\n\nfunction getMaxZoomRatio(pointers) {\n  var pointers2 = assign({}, pointers);\n  var ratios = [];\n  forEach(pointers, function (pointer, pointerId) {\n    delete pointers2[pointerId];\n    forEach(pointers2, function (pointer2) {\n      var x1 = Math.abs(pointer.startX - pointer2.startX);\n      var y1 = Math.abs(pointer.startY - pointer2.startY);\n      var x2 = Math.abs(pointer.endX - pointer2.endX);\n      var y2 = Math.abs(pointer.endY - pointer2.endY);\n      var z1 = Math.sqrt(x1 * x1 + y1 * y1);\n      var z2 = Math.sqrt(x2 * x2 + y2 * y2);\n      var ratio = (z2 - z1) / z1;\n      ratios.push(ratio);\n    });\n  });\n  ratios.sort(function (a, b) {\n    return Math.abs(a) < Math.abs(b);\n  });\n  return ratios[0];\n}\n/**\n * Get a pointer from an event object.\n * @param {Object} event - The target event object.\n * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\n * @returns {Object} The result pointer contains start and/or end point coordinates.\n */\n\nfunction getPointer(_ref2, endOnly) {\n  var pageX = _ref2.pageX,\n      pageY = _ref2.pageY;\n  var end = {\n    endX: pageX,\n    endY: pageY\n  };\n  return endOnly ? end : assign({\n    startX: pageX,\n    startY: pageY\n  }, end);\n}\n/**\n * Get the center point coordinate of a group of pointers.\n * @param {Object} pointers - The target pointers.\n * @returns {Object} The center point coordinate.\n */\n\nfunction getPointersCenter(pointers) {\n  var pageX = 0;\n  var pageY = 0;\n  var count = 0;\n  forEach(pointers, function (_ref3) {\n    var startX = _ref3.startX,\n        startY = _ref3.startY;\n    pageX += startX;\n    pageY += startY;\n    count += 1;\n  });\n  pageX /= count;\n  pageY /= count;\n  return {\n    pageX: pageX,\n    pageY: pageY\n  };\n}\n/**\n * Check if the given value is a finite number.\n */\n\nvar isFinite = Number.isFinite || WINDOW.isFinite;\n/**\n * Get the max sizes in a rectangle under the given aspect ratio.\n * @param {Object} data - The original sizes.\n * @param {string} [type='contain'] - The adjust type.\n * @returns {Object} The result sizes.\n */\n\nfunction getAdjustedSizes(_ref4) // or 'cover'\n{\n  var aspectRatio = _ref4.aspectRatio,\n      height = _ref4.height,\n      width = _ref4.width;\n  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'contain';\n\n  var isValidNumber = function isValidNumber(value) {\n    return isFinite(value) && value > 0;\n  };\n\n  if (isValidNumber(width) && isValidNumber(height)) {\n    var adjustedWidth = height * aspectRatio;\n\n    if (type === 'contain' && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n      height = width / aspectRatio;\n    } else {\n      width = height * aspectRatio;\n    }\n  } else if (isValidNumber(width)) {\n    height = width / aspectRatio;\n  } else if (isValidNumber(height)) {\n    width = height * aspectRatio;\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n/**\n * Get the new sizes of a rectangle after rotated.\n * @param {Object} data - The original sizes.\n * @returns {Object} The result sizes.\n */\n\nfunction getRotatedSizes(_ref5) {\n  var width = _ref5.width,\n      height = _ref5.height,\n      degree = _ref5.degree;\n  degree = Math.abs(degree) % 180;\n\n  if (degree === 90) {\n    return {\n      width: height,\n      height: width\n    };\n  }\n\n  var arc = degree % 90 * Math.PI / 180;\n  var sinArc = Math.sin(arc);\n  var cosArc = Math.cos(arc);\n  var newWidth = width * cosArc + height * sinArc;\n  var newHeight = width * sinArc + height * cosArc;\n  return degree > 90 ? {\n    width: newHeight,\n    height: newWidth\n  } : {\n    width: newWidth,\n    height: newHeight\n  };\n}\n/**\n * Get a canvas which drew the given image.\n * @param {HTMLImageElement} image - The image for drawing.\n * @param {Object} imageData - The image data.\n * @param {Object} canvasData - The canvas data.\n * @param {Object} options - The options.\n * @returns {HTMLCanvasElement} The result canvas.\n */\n\nfunction getSourceCanvas(image, _ref6, _ref7, _ref8) {\n  var imageAspectRatio = _ref6.aspectRatio,\n      imageNaturalWidth = _ref6.naturalWidth,\n      imageNaturalHeight = _ref6.naturalHeight,\n      _ref6$rotate = _ref6.rotate,\n      rotate = _ref6$rotate === void 0 ? 0 : _ref6$rotate,\n      _ref6$scaleX = _ref6.scaleX,\n      scaleX = _ref6$scaleX === void 0 ? 1 : _ref6$scaleX,\n      _ref6$scaleY = _ref6.scaleY,\n      scaleY = _ref6$scaleY === void 0 ? 1 : _ref6$scaleY;\n  var aspectRatio = _ref7.aspectRatio,\n      naturalWidth = _ref7.naturalWidth,\n      naturalHeight = _ref7.naturalHeight;\n  var _ref8$fillColor = _ref8.fillColor,\n      fillColor = _ref8$fillColor === void 0 ? 'transparent' : _ref8$fillColor,\n      _ref8$imageSmoothingE = _ref8.imageSmoothingEnabled,\n      imageSmoothingEnabled = _ref8$imageSmoothingE === void 0 ? true : _ref8$imageSmoothingE,\n      _ref8$imageSmoothingQ = _ref8.imageSmoothingQuality,\n      imageSmoothingQuality = _ref8$imageSmoothingQ === void 0 ? 'low' : _ref8$imageSmoothingQ,\n      _ref8$maxWidth = _ref8.maxWidth,\n      maxWidth = _ref8$maxWidth === void 0 ? Infinity : _ref8$maxWidth,\n      _ref8$maxHeight = _ref8.maxHeight,\n      maxHeight = _ref8$maxHeight === void 0 ? Infinity : _ref8$maxHeight,\n      _ref8$minWidth = _ref8.minWidth,\n      minWidth = _ref8$minWidth === void 0 ? 0 : _ref8$minWidth,\n      _ref8$minHeight = _ref8.minHeight,\n      minHeight = _ref8$minHeight === void 0 ? 0 : _ref8$minHeight;\n  var canvas = document.createElement('canvas');\n  var context = canvas.getContext('2d');\n  var maxSizes = getAdjustedSizes({\n    aspectRatio: aspectRatio,\n    width: maxWidth,\n    height: maxHeight\n  });\n  var minSizes = getAdjustedSizes({\n    aspectRatio: aspectRatio,\n    width: minWidth,\n    height: minHeight\n  }, 'cover');\n  var width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\n  var height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight)); // Note: should always use image's natural sizes for drawing as\n  // imageData.naturalWidth === canvasData.naturalHeight when rotate % 180 === 90\n\n  var destMaxSizes = getAdjustedSizes({\n    aspectRatio: imageAspectRatio,\n    width: maxWidth,\n    height: maxHeight\n  });\n  var destMinSizes = getAdjustedSizes({\n    aspectRatio: imageAspectRatio,\n    width: minWidth,\n    height: minHeight\n  }, 'cover');\n  var destWidth = Math.min(destMaxSizes.width, Math.max(destMinSizes.width, imageNaturalWidth));\n  var destHeight = Math.min(destMaxSizes.height, Math.max(destMinSizes.height, imageNaturalHeight));\n  var params = [-destWidth / 2, -destHeight / 2, destWidth, destHeight];\n  canvas.width = normalizeDecimalNumber(width);\n  canvas.height = normalizeDecimalNumber(height);\n  context.fillStyle = fillColor;\n  context.fillRect(0, 0, width, height);\n  context.save();\n  context.translate(width / 2, height / 2);\n  context.rotate(rotate * Math.PI / 180);\n  context.scale(scaleX, scaleY);\n  context.imageSmoothingEnabled = imageSmoothingEnabled;\n  context.imageSmoothingQuality = imageSmoothingQuality;\n  context.drawImage.apply(context, [image].concat(_toConsumableArray(params.map(function (param) {\n    return Math.floor(normalizeDecimalNumber(param));\n  }))));\n  context.restore();\n  return canvas;\n}\nvar fromCharCode = String.fromCharCode;\n/**\n * Get string from char code in data view.\n * @param {DataView} dataView - The data view for read.\n * @param {number} start - The start index.\n * @param {number} length - The read length.\n * @returns {string} The read result.\n */\n\nfunction getStringFromCharCode(dataView, start, length) {\n  var str = '';\n  var i;\n  length += start;\n\n  for (i = start; i < length; i += 1) {\n    str += fromCharCode(dataView.getUint8(i));\n  }\n\n  return str;\n}\nvar REGEXP_DATA_URL_HEAD = /^data:.*,/;\n/**\n * Transform Data URL to array buffer.\n * @param {string} dataURL - The Data URL to transform.\n * @returns {ArrayBuffer} The result array buffer.\n */\n\nfunction dataURLToArrayBuffer(dataURL) {\n  var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n  var binary = atob(base64);\n  var arrayBuffer = new ArrayBuffer(binary.length);\n  var uint8 = new Uint8Array(arrayBuffer);\n  forEach(uint8, function (value, i) {\n    uint8[i] = binary.charCodeAt(i);\n  });\n  return arrayBuffer;\n}\n/**\n * Transform array buffer to Data URL.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n * @param {string} mimeType - The mime type of the Data URL.\n * @returns {string} The result Data URL.\n */\n\nfunction arrayBufferToDataURL(arrayBuffer, mimeType) {\n  var chunks = [];\n  var chunkSize = 8192;\n  var uint8 = new Uint8Array(arrayBuffer);\n\n  while (uint8.length > 0) {\n    chunks.push(fromCharCode.apply(void 0, _toConsumableArray(uint8.subarray(0, chunkSize))));\n    uint8 = uint8.subarray(chunkSize);\n  }\n\n  return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\n}\n/**\n * Get orientation value from given array buffer.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n * @returns {number} The read orientation value.\n */\n\nfunction resetAndGetOrientation(arrayBuffer) {\n  var dataView = new DataView(arrayBuffer);\n  var orientation; // Ignores range error when the image does not have correct Exif information\n\n  try {\n    var littleEndian;\n    var app1Start;\n    var ifdStart; // Only handle JPEG image (start by 0xFFD8)\n\n    if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n      var length = dataView.byteLength;\n      var offset = 2;\n\n      while (offset + 1 < length) {\n        if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n          app1Start = offset;\n          break;\n        }\n\n        offset += 1;\n      }\n    }\n\n    if (app1Start) {\n      var exifIDCode = app1Start + 4;\n      var tiffOffset = app1Start + 10;\n\n      if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n        var endianness = dataView.getUint16(tiffOffset);\n        littleEndian = endianness === 0x4949;\n\n        if (littleEndian || endianness === 0x4D4D\n        /* bigEndian */\n        ) {\n            if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n              var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n              if (firstIFDOffset >= 0x00000008) {\n                ifdStart = tiffOffset + firstIFDOffset;\n              }\n            }\n          }\n      }\n    }\n\n    if (ifdStart) {\n      var _length = dataView.getUint16(ifdStart, littleEndian);\n\n      var _offset;\n\n      var i;\n\n      for (i = 0; i < _length; i += 1) {\n        _offset = ifdStart + i * 12 + 2;\n\n        if (dataView.getUint16(_offset, littleEndian) === 0x0112\n        /* Orientation */\n        ) {\n            // 8 is the offset of the current tag's value\n            _offset += 8; // Get the original orientation value\n\n            orientation = dataView.getUint16(_offset, littleEndian); // Override the orientation with its default value\n\n            dataView.setUint16(_offset, 1, littleEndian);\n            break;\n          }\n      }\n    }\n  } catch (e) {\n    orientation = 1;\n  }\n\n  return orientation;\n}\n/**\n * Parse Exif Orientation value.\n * @param {number} orientation - The orientation to parse.\n * @returns {Object} The parsed result.\n */\n\nfunction parseOrientation(orientation) {\n  var rotate = 0;\n  var scaleX = 1;\n  var scaleY = 1;\n\n  switch (orientation) {\n    // Flip horizontal\n    case 2:\n      scaleX = -1;\n      break;\n    // Rotate left 180°\n\n    case 3:\n      rotate = -180;\n      break;\n    // Flip vertical\n\n    case 4:\n      scaleY = -1;\n      break;\n    // Flip vertical and rotate right 90°\n\n    case 5:\n      rotate = 90;\n      scaleY = -1;\n      break;\n    // Rotate right 90°\n\n    case 6:\n      rotate = 90;\n      break;\n    // Flip horizontal and rotate right 90°\n\n    case 7:\n      rotate = 90;\n      scaleX = -1;\n      break;\n    // Rotate left 90°\n\n    case 8:\n      rotate = -90;\n      break;\n\n    default:\n  }\n\n  return {\n    rotate: rotate,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n\nvar render = {\n  render: function render() {\n    this.initContainer();\n    this.initCanvas();\n    this.initCropBox();\n    this.renderCanvas();\n\n    if (this.cropped) {\n      this.renderCropBox();\n    }\n  },\n  initContainer: function initContainer() {\n    var element = this.element,\n        options = this.options,\n        container = this.container,\n        cropper = this.cropper;\n    addClass(cropper, CLASS_HIDDEN);\n    removeClass(element, CLASS_HIDDEN);\n    var containerData = {\n      width: Math.max(container.offsetWidth, Number(options.minContainerWidth) || 200),\n      height: Math.max(container.offsetHeight, Number(options.minContainerHeight) || 100)\n    };\n    this.containerData = containerData;\n    setStyle(cropper, {\n      width: containerData.width,\n      height: containerData.height\n    });\n    addClass(element, CLASS_HIDDEN);\n    removeClass(cropper, CLASS_HIDDEN);\n  },\n  // Canvas (image wrapper)\n  initCanvas: function initCanvas() {\n    var containerData = this.containerData,\n        imageData = this.imageData;\n    var viewMode = this.options.viewMode;\n    var rotated = Math.abs(imageData.rotate) % 180 === 90;\n    var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n    var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n    var aspectRatio = naturalWidth / naturalHeight;\n    var canvasWidth = containerData.width;\n    var canvasHeight = containerData.height;\n\n    if (containerData.height * aspectRatio > containerData.width) {\n      if (viewMode === 3) {\n        canvasWidth = containerData.height * aspectRatio;\n      } else {\n        canvasHeight = containerData.width / aspectRatio;\n      }\n    } else if (viewMode === 3) {\n      canvasHeight = containerData.width / aspectRatio;\n    } else {\n      canvasWidth = containerData.height * aspectRatio;\n    }\n\n    var canvasData = {\n      aspectRatio: aspectRatio,\n      naturalWidth: naturalWidth,\n      naturalHeight: naturalHeight,\n      width: canvasWidth,\n      height: canvasHeight\n    };\n    canvasData.left = (containerData.width - canvasWidth) / 2;\n    canvasData.top = (containerData.height - canvasHeight) / 2;\n    canvasData.oldLeft = canvasData.left;\n    canvasData.oldTop = canvasData.top;\n    this.canvasData = canvasData;\n    this.limited = viewMode === 1 || viewMode === 2;\n    this.limitCanvas(true, true);\n    this.initialImageData = assign({}, imageData);\n    this.initialCanvasData = assign({}, canvasData);\n  },\n  limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\n    var options = this.options,\n        containerData = this.containerData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n    var viewMode = options.viewMode;\n    var aspectRatio = canvasData.aspectRatio;\n    var cropped = this.cropped && cropBoxData;\n\n    if (sizeLimited) {\n      var minCanvasWidth = Number(options.minCanvasWidth) || 0;\n      var minCanvasHeight = Number(options.minCanvasHeight) || 0;\n\n      if (viewMode > 1) {\n        minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n        minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n\n        if (viewMode === 3) {\n          if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n            minCanvasWidth = minCanvasHeight * aspectRatio;\n          } else {\n            minCanvasHeight = minCanvasWidth / aspectRatio;\n          }\n        }\n      } else if (viewMode > 0) {\n        if (minCanvasWidth) {\n          minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\n        } else if (minCanvasHeight) {\n          minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\n        } else if (cropped) {\n          minCanvasWidth = cropBoxData.width;\n          minCanvasHeight = cropBoxData.height;\n\n          if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n            minCanvasWidth = minCanvasHeight * aspectRatio;\n          } else {\n            minCanvasHeight = minCanvasWidth / aspectRatio;\n          }\n        }\n      }\n\n      var _getAdjustedSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: minCanvasWidth,\n        height: minCanvasHeight\n      });\n\n      minCanvasWidth = _getAdjustedSizes.width;\n      minCanvasHeight = _getAdjustedSizes.height;\n      canvasData.minWidth = minCanvasWidth;\n      canvasData.minHeight = minCanvasHeight;\n      canvasData.maxWidth = Infinity;\n      canvasData.maxHeight = Infinity;\n    }\n\n    if (positionLimited) {\n      if (viewMode > (cropped ? 0 : 1)) {\n        var newCanvasLeft = containerData.width - canvasData.width;\n        var newCanvasTop = containerData.height - canvasData.height;\n        canvasData.minLeft = Math.min(0, newCanvasLeft);\n        canvasData.minTop = Math.min(0, newCanvasTop);\n        canvasData.maxLeft = Math.max(0, newCanvasLeft);\n        canvasData.maxTop = Math.max(0, newCanvasTop);\n\n        if (cropped && this.limited) {\n          canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\n          canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\n          canvasData.maxLeft = cropBoxData.left;\n          canvasData.maxTop = cropBoxData.top;\n\n          if (viewMode === 2) {\n            if (canvasData.width >= containerData.width) {\n              canvasData.minLeft = Math.min(0, newCanvasLeft);\n              canvasData.maxLeft = Math.max(0, newCanvasLeft);\n            }\n\n            if (canvasData.height >= containerData.height) {\n              canvasData.minTop = Math.min(0, newCanvasTop);\n              canvasData.maxTop = Math.max(0, newCanvasTop);\n            }\n          }\n        }\n      } else {\n        canvasData.minLeft = -canvasData.width;\n        canvasData.minTop = -canvasData.height;\n        canvasData.maxLeft = containerData.width;\n        canvasData.maxTop = containerData.height;\n      }\n    }\n  },\n  renderCanvas: function renderCanvas(changed, transformed) {\n    var canvasData = this.canvasData,\n        imageData = this.imageData;\n\n    if (transformed) {\n      var _getRotatedSizes = getRotatedSizes({\n        width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\n        height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\n        degree: imageData.rotate || 0\n      }),\n          naturalWidth = _getRotatedSizes.width,\n          naturalHeight = _getRotatedSizes.height;\n\n      var width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\n      var height = canvasData.height * (naturalHeight / canvasData.naturalHeight);\n      canvasData.left -= (width - canvasData.width) / 2;\n      canvasData.top -= (height - canvasData.height) / 2;\n      canvasData.width = width;\n      canvasData.height = height;\n      canvasData.aspectRatio = naturalWidth / naturalHeight;\n      canvasData.naturalWidth = naturalWidth;\n      canvasData.naturalHeight = naturalHeight;\n      this.limitCanvas(true, false);\n    }\n\n    if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\n      canvasData.left = canvasData.oldLeft;\n    }\n\n    if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\n      canvasData.top = canvasData.oldTop;\n    }\n\n    canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n    canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n    this.limitCanvas(false, true);\n    canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\n    canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\n    canvasData.oldLeft = canvasData.left;\n    canvasData.oldTop = canvasData.top;\n    setStyle(this.canvas, assign({\n      width: canvasData.width,\n      height: canvasData.height\n    }, getTransforms({\n      translateX: canvasData.left,\n      translateY: canvasData.top\n    })));\n    this.renderImage(changed);\n\n    if (this.cropped && this.limited) {\n      this.limitCropBox(true, true);\n    }\n  },\n  renderImage: function renderImage(changed) {\n    var canvasData = this.canvasData,\n        imageData = this.imageData;\n    var width = imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\n    var height = imageData.naturalHeight * (canvasData.height / canvasData.naturalHeight);\n    assign(imageData, {\n      width: width,\n      height: height,\n      left: (canvasData.width - width) / 2,\n      top: (canvasData.height - height) / 2\n    });\n    setStyle(this.image, assign({\n      width: imageData.width,\n      height: imageData.height\n    }, getTransforms(assign({\n      translateX: imageData.left,\n      translateY: imageData.top\n    }, imageData))));\n\n    if (changed) {\n      this.output();\n    }\n  },\n  initCropBox: function initCropBox() {\n    var options = this.options,\n        canvasData = this.canvasData;\n    var aspectRatio = options.aspectRatio || options.initialAspectRatio;\n    var autoCropArea = Number(options.autoCropArea) || 0.8;\n    var cropBoxData = {\n      width: canvasData.width,\n      height: canvasData.height\n    };\n\n    if (aspectRatio) {\n      if (canvasData.height * aspectRatio > canvasData.width) {\n        cropBoxData.height = cropBoxData.width / aspectRatio;\n      } else {\n        cropBoxData.width = cropBoxData.height * aspectRatio;\n      }\n    }\n\n    this.cropBoxData = cropBoxData;\n    this.limitCropBox(true, true); // Initialize auto crop area\n\n    cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n    cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight); // The width/height of auto crop area must large than \"minWidth/Height\"\n\n    cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\n    cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\n    cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\n    cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\n    cropBoxData.oldLeft = cropBoxData.left;\n    cropBoxData.oldTop = cropBoxData.top;\n    this.initialCropBoxData = assign({}, cropBoxData);\n  },\n  limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\n    var options = this.options,\n        containerData = this.containerData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData,\n        limited = this.limited;\n    var aspectRatio = options.aspectRatio;\n\n    if (sizeLimited) {\n      var minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n      var minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n      var maxCropBoxWidth = limited ? Math.min(containerData.width, canvasData.width, canvasData.width + canvasData.left, containerData.width - canvasData.left) : containerData.width;\n      var maxCropBoxHeight = limited ? Math.min(containerData.height, canvasData.height, canvasData.height + canvasData.top, containerData.height - canvasData.top) : containerData.height; // The min/maxCropBoxWidth/Height must be less than container's width/height\n\n      minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n      minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n\n      if (aspectRatio) {\n        if (minCropBoxWidth && minCropBoxHeight) {\n          if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n          } else {\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n          }\n        } else if (minCropBoxWidth) {\n          minCropBoxHeight = minCropBoxWidth / aspectRatio;\n        } else if (minCropBoxHeight) {\n          minCropBoxWidth = minCropBoxHeight * aspectRatio;\n        }\n\n        if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n          maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n        } else {\n          maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n        }\n      } // The minWidth/Height must be less than maxWidth/Height\n\n\n      cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n      cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n      cropBoxData.maxWidth = maxCropBoxWidth;\n      cropBoxData.maxHeight = maxCropBoxHeight;\n    }\n\n    if (positionLimited) {\n      if (limited) {\n        cropBoxData.minLeft = Math.max(0, canvasData.left);\n        cropBoxData.minTop = Math.max(0, canvasData.top);\n        cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\n        cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\n      } else {\n        cropBoxData.minLeft = 0;\n        cropBoxData.minTop = 0;\n        cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n        cropBoxData.maxTop = containerData.height - cropBoxData.height;\n      }\n    }\n  },\n  renderCropBox: function renderCropBox() {\n    var options = this.options,\n        containerData = this.containerData,\n        cropBoxData = this.cropBoxData;\n\n    if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\n      cropBoxData.left = cropBoxData.oldLeft;\n    }\n\n    if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\n      cropBoxData.top = cropBoxData.oldTop;\n    }\n\n    cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n    cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n    this.limitCropBox(false, true);\n    cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\n    cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\n    cropBoxData.oldLeft = cropBoxData.left;\n    cropBoxData.oldTop = cropBoxData.top;\n\n    if (options.movable && options.cropBoxMovable) {\n      // Turn to move the canvas when the crop box is equal to the container\n      setData(this.face, DATA_ACTION, cropBoxData.width >= containerData.width && cropBoxData.height >= containerData.height ? ACTION_MOVE : ACTION_ALL);\n    }\n\n    setStyle(this.cropBox, assign({\n      width: cropBoxData.width,\n      height: cropBoxData.height\n    }, getTransforms({\n      translateX: cropBoxData.left,\n      translateY: cropBoxData.top\n    })));\n\n    if (this.cropped && this.limited) {\n      this.limitCanvas(true, true);\n    }\n\n    if (!this.disabled) {\n      this.output();\n    }\n  },\n  output: function output() {\n    this.preview();\n    dispatchEvent(this.element, EVENT_CROP, this.getData());\n  }\n};\n\nvar preview = {\n  initPreview: function initPreview() {\n    var crossOrigin = this.crossOrigin;\n    var preview = this.options.preview;\n    var url = crossOrigin ? this.crossOriginUrl : this.url;\n    var image = document.createElement('img');\n\n    if (crossOrigin) {\n      image.crossOrigin = crossOrigin;\n    }\n\n    image.src = url;\n    this.viewBox.appendChild(image);\n    this.viewBoxImage = image;\n\n    if (!preview) {\n      return;\n    }\n\n    var previews = preview;\n\n    if (typeof preview === 'string') {\n      previews = this.element.ownerDocument.querySelectorAll(preview);\n    } else if (preview.querySelector) {\n      previews = [preview];\n    }\n\n    this.previews = previews;\n    forEach(previews, function (el) {\n      var img = document.createElement('img'); // Save the original size for recover\n\n      setData(el, DATA_PREVIEW, {\n        width: el.offsetWidth,\n        height: el.offsetHeight,\n        html: el.innerHTML\n      });\n\n      if (crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      }\n\n      img.src = url;\n      /**\n       * Override img element styles\n       * Add `display:block` to avoid margin top issue\n       * Add `height:auto` to override `height` attribute on IE8\n       * (Occur only when margin-top <= -height)\n       */\n\n      img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\"';\n      el.innerHTML = '';\n      el.appendChild(img);\n    });\n  },\n  resetPreview: function resetPreview() {\n    forEach(this.previews, function (element) {\n      var data = getData(element, DATA_PREVIEW);\n      setStyle(element, {\n        width: data.width,\n        height: data.height\n      });\n      element.innerHTML = data.html;\n      removeData(element, DATA_PREVIEW);\n    });\n  },\n  preview: function preview() {\n    var imageData = this.imageData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n    var cropBoxWidth = cropBoxData.width,\n        cropBoxHeight = cropBoxData.height;\n    var width = imageData.width,\n        height = imageData.height;\n    var left = cropBoxData.left - canvasData.left - imageData.left;\n    var top = cropBoxData.top - canvasData.top - imageData.top;\n\n    if (!this.cropped || this.disabled) {\n      return;\n    }\n\n    setStyle(this.viewBoxImage, assign({\n      width: width,\n      height: height\n    }, getTransforms(assign({\n      translateX: -left,\n      translateY: -top\n    }, imageData))));\n    forEach(this.previews, function (element) {\n      var data = getData(element, DATA_PREVIEW);\n      var originalWidth = data.width;\n      var originalHeight = data.height;\n      var newWidth = originalWidth;\n      var newHeight = originalHeight;\n      var ratio = 1;\n\n      if (cropBoxWidth) {\n        ratio = originalWidth / cropBoxWidth;\n        newHeight = cropBoxHeight * ratio;\n      }\n\n      if (cropBoxHeight && newHeight > originalHeight) {\n        ratio = originalHeight / cropBoxHeight;\n        newWidth = cropBoxWidth * ratio;\n        newHeight = originalHeight;\n      }\n\n      setStyle(element, {\n        width: newWidth,\n        height: newHeight\n      });\n      setStyle(element.getElementsByTagName('img')[0], assign({\n        width: width * ratio,\n        height: height * ratio\n      }, getTransforms(assign({\n        translateX: -left * ratio,\n        translateY: -top * ratio\n      }, imageData))));\n    });\n  }\n};\n\nvar events = {\n  bind: function bind() {\n    var element = this.element,\n        options = this.options,\n        cropper = this.cropper;\n\n    if (isFunction(options.cropstart)) {\n      addListener(element, EVENT_CROP_START, options.cropstart);\n    }\n\n    if (isFunction(options.cropmove)) {\n      addListener(element, EVENT_CROP_MOVE, options.cropmove);\n    }\n\n    if (isFunction(options.cropend)) {\n      addListener(element, EVENT_CROP_END, options.cropend);\n    }\n\n    if (isFunction(options.crop)) {\n      addListener(element, EVENT_CROP, options.crop);\n    }\n\n    if (isFunction(options.zoom)) {\n      addListener(element, EVENT_ZOOM, options.zoom);\n    }\n\n    addListener(cropper, EVENT_POINTER_DOWN, this.onCropStart = this.cropStart.bind(this));\n\n    if (options.zoomable && options.zoomOnWheel) {\n      addListener(cropper, EVENT_WHEEL, this.onWheel = this.wheel.bind(this));\n    }\n\n    if (options.toggleDragModeOnDblclick) {\n      addListener(cropper, EVENT_DBLCLICK, this.onDblclick = this.dblclick.bind(this));\n    }\n\n    addListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove = this.cropMove.bind(this));\n    addListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd = this.cropEnd.bind(this));\n\n    if (options.responsive) {\n      addListener(window, EVENT_RESIZE, this.onResize = this.resize.bind(this));\n    }\n  },\n  unbind: function unbind() {\n    var element = this.element,\n        options = this.options,\n        cropper = this.cropper;\n\n    if (isFunction(options.cropstart)) {\n      removeListener(element, EVENT_CROP_START, options.cropstart);\n    }\n\n    if (isFunction(options.cropmove)) {\n      removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n    }\n\n    if (isFunction(options.cropend)) {\n      removeListener(element, EVENT_CROP_END, options.cropend);\n    }\n\n    if (isFunction(options.crop)) {\n      removeListener(element, EVENT_CROP, options.crop);\n    }\n\n    if (isFunction(options.zoom)) {\n      removeListener(element, EVENT_ZOOM, options.zoom);\n    }\n\n    removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\n\n    if (options.zoomable && options.zoomOnWheel) {\n      removeListener(cropper, EVENT_WHEEL, this.onWheel);\n    }\n\n    if (options.toggleDragModeOnDblclick) {\n      removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\n    }\n\n    removeListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove);\n    removeListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd);\n\n    if (options.responsive) {\n      removeListener(window, EVENT_RESIZE, this.onResize);\n    }\n  }\n};\n\nvar handlers = {\n  resize: function resize() {\n    var options = this.options,\n        container = this.container,\n        containerData = this.containerData;\n    var minContainerWidth = Number(options.minContainerWidth) || 200;\n    var minContainerHeight = Number(options.minContainerHeight) || 100;\n\n    if (this.disabled || containerData.width <= minContainerWidth || containerData.height <= minContainerHeight) {\n      return;\n    }\n\n    var ratio = container.offsetWidth / containerData.width; // Resize when width changed or height changed\n\n    if (ratio !== 1 || container.offsetHeight !== containerData.height) {\n      var canvasData;\n      var cropBoxData;\n\n      if (options.restore) {\n        canvasData = this.getCanvasData();\n        cropBoxData = this.getCropBoxData();\n      }\n\n      this.render();\n\n      if (options.restore) {\n        this.setCanvasData(forEach(canvasData, function (n, i) {\n          canvasData[i] = n * ratio;\n        }));\n        this.setCropBoxData(forEach(cropBoxData, function (n, i) {\n          cropBoxData[i] = n * ratio;\n        }));\n      }\n    }\n  },\n  dblclick: function dblclick() {\n    if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\n      return;\n    }\n\n    this.setDragMode(hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\n  },\n  wheel: function wheel(e) {\n    var _this = this;\n\n    var ratio = Number(this.options.wheelZoomRatio) || 0.1;\n    var delta = 1;\n\n    if (this.disabled) {\n      return;\n    }\n\n    e.preventDefault(); // Limit wheel speed to prevent zoom too fast (#21)\n\n    if (this.wheeling) {\n      return;\n    }\n\n    this.wheeling = true;\n    setTimeout(function () {\n      _this.wheeling = false;\n    }, 50);\n\n    if (e.deltaY) {\n      delta = e.deltaY > 0 ? 1 : -1;\n    } else if (e.wheelDelta) {\n      delta = -e.wheelDelta / 120;\n    } else if (e.detail) {\n      delta = e.detail > 0 ? 1 : -1;\n    }\n\n    this.zoom(-delta * ratio, e);\n  },\n  cropStart: function cropStart(e) {\n    if (this.disabled) {\n      return;\n    }\n\n    var options = this.options,\n        pointers = this.pointers;\n    var action;\n\n    if (e.changedTouches) {\n      // Handle touch event\n      forEach(e.changedTouches, function (touch) {\n        pointers[touch.identifier] = getPointer(touch);\n      });\n    } else {\n      // Handle mouse event and pointer event\n      pointers[e.pointerId || 0] = getPointer(e);\n    }\n\n    if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\n      action = ACTION_ZOOM;\n    } else {\n      action = getData(e.target, DATA_ACTION);\n    }\n\n    if (!REGEXP_ACTIONS.test(action)) {\n      return;\n    }\n\n    if (dispatchEvent(this.element, EVENT_CROP_START, {\n      originalEvent: e,\n      action: action\n    }) === false) {\n      return;\n    } // This line is required for preventing page zooming in iOS browsers\n\n\n    e.preventDefault();\n    this.action = action;\n    this.cropping = false;\n\n    if (action === ACTION_CROP) {\n      this.cropping = true;\n      addClass(this.dragBox, CLASS_MODAL);\n    }\n  },\n  cropMove: function cropMove(e) {\n    var action = this.action;\n\n    if (this.disabled || !action) {\n      return;\n    }\n\n    var pointers = this.pointers;\n    e.preventDefault();\n\n    if (dispatchEvent(this.element, EVENT_CROP_MOVE, {\n      originalEvent: e,\n      action: action\n    }) === false) {\n      return;\n    }\n\n    if (e.changedTouches) {\n      forEach(e.changedTouches, function (touch) {\n        // The first parameter should not be undefined (#432)\n        assign(pointers[touch.identifier] || {}, getPointer(touch, true));\n      });\n    } else {\n      assign(pointers[e.pointerId || 0] || {}, getPointer(e, true));\n    }\n\n    this.change(e);\n  },\n  cropEnd: function cropEnd(e) {\n    if (this.disabled) {\n      return;\n    }\n\n    var action = this.action,\n        pointers = this.pointers;\n\n    if (e.changedTouches) {\n      forEach(e.changedTouches, function (touch) {\n        delete pointers[touch.identifier];\n      });\n    } else {\n      delete pointers[e.pointerId || 0];\n    }\n\n    if (!action) {\n      return;\n    }\n\n    e.preventDefault();\n\n    if (!Object.keys(pointers).length) {\n      this.action = '';\n    }\n\n    if (this.cropping) {\n      this.cropping = false;\n      toggleClass(this.dragBox, CLASS_MODAL, this.cropped && this.options.modal);\n    }\n\n    dispatchEvent(this.element, EVENT_CROP_END, {\n      originalEvent: e,\n      action: action\n    });\n  }\n};\n\nvar change = {\n  change: function change(e) {\n    var options = this.options,\n        canvasData = this.canvasData,\n        containerData = this.containerData,\n        cropBoxData = this.cropBoxData,\n        pointers = this.pointers;\n    var action = this.action;\n    var aspectRatio = options.aspectRatio;\n    var left = cropBoxData.left,\n        top = cropBoxData.top,\n        width = cropBoxData.width,\n        height = cropBoxData.height;\n    var right = left + width;\n    var bottom = top + height;\n    var minLeft = 0;\n    var minTop = 0;\n    var maxWidth = containerData.width;\n    var maxHeight = containerData.height;\n    var renderable = true;\n    var offset; // Locking aspect ratio in \"free mode\" by holding shift key\n\n    if (!aspectRatio && e.shiftKey) {\n      aspectRatio = width && height ? width / height : 1;\n    }\n\n    if (this.limited) {\n      minLeft = cropBoxData.minLeft;\n      minTop = cropBoxData.minTop;\n      maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\n      maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\n    }\n\n    var pointer = pointers[Object.keys(pointers)[0]];\n    var range = {\n      x: pointer.endX - pointer.startX,\n      y: pointer.endY - pointer.startY\n    };\n\n    var check = function check(side) {\n      switch (side) {\n        case ACTION_EAST:\n          if (right + range.x > maxWidth) {\n            range.x = maxWidth - right;\n          }\n\n          break;\n\n        case ACTION_WEST:\n          if (left + range.x < minLeft) {\n            range.x = minLeft - left;\n          }\n\n          break;\n\n        case ACTION_NORTH:\n          if (top + range.y < minTop) {\n            range.y = minTop - top;\n          }\n\n          break;\n\n        case ACTION_SOUTH:\n          if (bottom + range.y > maxHeight) {\n            range.y = maxHeight - bottom;\n          }\n\n          break;\n\n        default:\n      }\n    };\n\n    switch (action) {\n      // Move crop box\n      case ACTION_ALL:\n        left += range.x;\n        top += range.y;\n        break;\n      // Resize crop box\n\n      case ACTION_EAST:\n        if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_EAST);\n        width += range.x;\n\n        if (width < 0) {\n          action = ACTION_WEST;\n          width = -width;\n          left -= width;\n        }\n\n        if (aspectRatio) {\n          height = width / aspectRatio;\n          top += (cropBoxData.height - height) / 2;\n        }\n\n        break;\n\n      case ACTION_NORTH:\n        if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_NORTH);\n        height -= range.y;\n        top += range.y;\n\n        if (height < 0) {\n          action = ACTION_SOUTH;\n          height = -height;\n          top -= height;\n        }\n\n        if (aspectRatio) {\n          width = height * aspectRatio;\n          left += (cropBoxData.width - width) / 2;\n        }\n\n        break;\n\n      case ACTION_WEST:\n        if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_WEST);\n        width -= range.x;\n        left += range.x;\n\n        if (width < 0) {\n          action = ACTION_EAST;\n          width = -width;\n          left -= width;\n        }\n\n        if (aspectRatio) {\n          height = width / aspectRatio;\n          top += (cropBoxData.height - height) / 2;\n        }\n\n        break;\n\n      case ACTION_SOUTH:\n        if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_SOUTH);\n        height += range.y;\n\n        if (height < 0) {\n          action = ACTION_NORTH;\n          height = -height;\n          top -= height;\n        }\n\n        if (aspectRatio) {\n          width = height * aspectRatio;\n          left += (cropBoxData.width - width) / 2;\n        }\n\n        break;\n\n      case ACTION_NORTH_EAST:\n        if (aspectRatio) {\n          if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n          width = height * aspectRatio;\n        } else {\n          check(ACTION_NORTH);\n          check(ACTION_EAST);\n\n          if (range.x >= 0) {\n            if (right < maxWidth) {\n              width += range.x;\n            } else if (range.y <= 0 && top <= minTop) {\n              renderable = false;\n            }\n          } else {\n            width += range.x;\n          }\n\n          if (range.y <= 0) {\n            if (top > minTop) {\n              height -= range.y;\n              top += range.y;\n            }\n          } else {\n            height -= range.y;\n            top += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_SOUTH_WEST;\n          height = -height;\n          width = -width;\n          top -= height;\n          left -= width;\n        } else if (width < 0) {\n          action = ACTION_NORTH_WEST;\n          width = -width;\n          left -= width;\n        } else if (height < 0) {\n          action = ACTION_SOUTH_EAST;\n          height = -height;\n          top -= height;\n        }\n\n        break;\n\n      case ACTION_NORTH_WEST:\n        if (aspectRatio) {\n          if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n          width = height * aspectRatio;\n          left += cropBoxData.width - width;\n        } else {\n          check(ACTION_NORTH);\n          check(ACTION_WEST);\n\n          if (range.x <= 0) {\n            if (left > minLeft) {\n              width -= range.x;\n              left += range.x;\n            } else if (range.y <= 0 && top <= minTop) {\n              renderable = false;\n            }\n          } else {\n            width -= range.x;\n            left += range.x;\n          }\n\n          if (range.y <= 0) {\n            if (top > minTop) {\n              height -= range.y;\n              top += range.y;\n            }\n          } else {\n            height -= range.y;\n            top += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_SOUTH_EAST;\n          height = -height;\n          width = -width;\n          top -= height;\n          left -= width;\n        } else if (width < 0) {\n          action = ACTION_NORTH_EAST;\n          width = -width;\n          left -= width;\n        } else if (height < 0) {\n          action = ACTION_SOUTH_WEST;\n          height = -height;\n          top -= height;\n        }\n\n        break;\n\n      case ACTION_SOUTH_WEST:\n        if (aspectRatio) {\n          if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_WEST);\n          width -= range.x;\n          left += range.x;\n          height = width / aspectRatio;\n        } else {\n          check(ACTION_SOUTH);\n          check(ACTION_WEST);\n\n          if (range.x <= 0) {\n            if (left > minLeft) {\n              width -= range.x;\n              left += range.x;\n            } else if (range.y >= 0 && bottom >= maxHeight) {\n              renderable = false;\n            }\n          } else {\n            width -= range.x;\n            left += range.x;\n          }\n\n          if (range.y >= 0) {\n            if (bottom < maxHeight) {\n              height += range.y;\n            }\n          } else {\n            height += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_NORTH_EAST;\n          height = -height;\n          width = -width;\n          top -= height;\n          left -= width;\n        } else if (width < 0) {\n          action = ACTION_SOUTH_EAST;\n          width = -width;\n          left -= width;\n        } else if (height < 0) {\n          action = ACTION_NORTH_WEST;\n          height = -height;\n          top -= height;\n        }\n\n        break;\n\n      case ACTION_SOUTH_EAST:\n        if (aspectRatio) {\n          if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_EAST);\n          width += range.x;\n          height = width / aspectRatio;\n        } else {\n          check(ACTION_SOUTH);\n          check(ACTION_EAST);\n\n          if (range.x >= 0) {\n            if (right < maxWidth) {\n              width += range.x;\n            } else if (range.y >= 0 && bottom >= maxHeight) {\n              renderable = false;\n            }\n          } else {\n            width += range.x;\n          }\n\n          if (range.y >= 0) {\n            if (bottom < maxHeight) {\n              height += range.y;\n            }\n          } else {\n            height += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_NORTH_WEST;\n          height = -height;\n          width = -width;\n          top -= height;\n          left -= width;\n        } else if (width < 0) {\n          action = ACTION_SOUTH_WEST;\n          width = -width;\n          left -= width;\n        } else if (height < 0) {\n          action = ACTION_NORTH_EAST;\n          height = -height;\n          top -= height;\n        }\n\n        break;\n      // Move canvas\n\n      case ACTION_MOVE:\n        this.move(range.x, range.y);\n        renderable = false;\n        break;\n      // Zoom canvas\n\n      case ACTION_ZOOM:\n        this.zoom(getMaxZoomRatio(pointers), e);\n        renderable = false;\n        break;\n      // Create crop box\n\n      case ACTION_CROP:\n        if (!range.x || !range.y) {\n          renderable = false;\n          break;\n        }\n\n        offset = getOffset(this.cropper);\n        left = pointer.startX - offset.left;\n        top = pointer.startY - offset.top;\n        width = cropBoxData.minWidth;\n        height = cropBoxData.minHeight;\n\n        if (range.x > 0) {\n          action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n        } else if (range.x < 0) {\n          left -= width;\n          action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n        }\n\n        if (range.y < 0) {\n          top -= height;\n        } // Show the crop box if is hidden\n\n\n        if (!this.cropped) {\n          removeClass(this.cropBox, CLASS_HIDDEN);\n          this.cropped = true;\n\n          if (this.limited) {\n            this.limitCropBox(true, true);\n          }\n        }\n\n        break;\n\n      default:\n    }\n\n    if (renderable) {\n      cropBoxData.width = width;\n      cropBoxData.height = height;\n      cropBoxData.left = left;\n      cropBoxData.top = top;\n      this.action = action;\n      this.renderCropBox();\n    } // Override\n\n\n    forEach(pointers, function (p) {\n      p.startX = p.endX;\n      p.startY = p.endY;\n    });\n  }\n};\n\nvar methods = {\n  // Show the crop box manually\n  crop: function crop() {\n    if (this.ready && !this.cropped && !this.disabled) {\n      this.cropped = true;\n      this.limitCropBox(true, true);\n\n      if (this.options.modal) {\n        addClass(this.dragBox, CLASS_MODAL);\n      }\n\n      removeClass(this.cropBox, CLASS_HIDDEN);\n      this.setCropBoxData(this.initialCropBoxData);\n    }\n\n    return this;\n  },\n  // Reset the image and crop box to their initial states\n  reset: function reset() {\n    if (this.ready && !this.disabled) {\n      this.imageData = assign({}, this.initialImageData);\n      this.canvasData = assign({}, this.initialCanvasData);\n      this.cropBoxData = assign({}, this.initialCropBoxData);\n      this.renderCanvas();\n\n      if (this.cropped) {\n        this.renderCropBox();\n      }\n    }\n\n    return this;\n  },\n  // Clear the crop box\n  clear: function clear() {\n    if (this.cropped && !this.disabled) {\n      assign(this.cropBoxData, {\n        left: 0,\n        top: 0,\n        width: 0,\n        height: 0\n      });\n      this.cropped = false;\n      this.renderCropBox();\n      this.limitCanvas(true, true); // Render canvas after crop box rendered\n\n      this.renderCanvas();\n      removeClass(this.dragBox, CLASS_MODAL);\n      addClass(this.cropBox, CLASS_HIDDEN);\n    }\n\n    return this;\n  },\n\n  /**\n   * Replace the image's src and rebuild the cropper\n   * @param {string} url - The new URL.\n   * @param {boolean} [hasSameSize] - Indicate if the new image has the same size as the old one.\n   * @returns {Cropper} this\n   */\n  replace: function replace(url) {\n    var hasSameSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (!this.disabled && url) {\n      if (this.isImg) {\n        this.element.src = url;\n      }\n\n      if (hasSameSize) {\n        this.url = url;\n        this.image.src = url;\n\n        if (this.ready) {\n          this.viewBoxImage.src = url;\n          forEach(this.previews, function (element) {\n            element.getElementsByTagName('img')[0].src = url;\n          });\n        }\n      } else {\n        if (this.isImg) {\n          this.replaced = true;\n        }\n\n        this.options.data = null;\n        this.uncreate();\n        this.load(url);\n      }\n    }\n\n    return this;\n  },\n  // Enable (unfreeze) the cropper\n  enable: function enable() {\n    if (this.ready && this.disabled) {\n      this.disabled = false;\n      removeClass(this.cropper, CLASS_DISABLED);\n    }\n\n    return this;\n  },\n  // Disable (freeze) the cropper\n  disable: function disable() {\n    if (this.ready && !this.disabled) {\n      this.disabled = true;\n      addClass(this.cropper, CLASS_DISABLED);\n    }\n\n    return this;\n  },\n\n  /**\n   * Destroy the cropper and remove the instance from the image\n   * @returns {Cropper} this\n   */\n  destroy: function destroy() {\n    var element = this.element;\n\n    if (!element[NAMESPACE]) {\n      return this;\n    }\n\n    element[NAMESPACE] = undefined;\n\n    if (this.isImg && this.replaced) {\n      element.src = this.originalUrl;\n    }\n\n    this.uncreate();\n    return this;\n  },\n\n  /**\n   * Move the canvas with relative offsets\n   * @param {number} offsetX - The relative offset distance on the x-axis.\n   * @param {number} [offsetY=offsetX] - The relative offset distance on the y-axis.\n   * @returns {Cropper} this\n   */\n  move: function move(offsetX) {\n    var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : offsetX;\n    var _this$canvasData = this.canvasData,\n        left = _this$canvasData.left,\n        top = _this$canvasData.top;\n    return this.moveTo(isUndefined(offsetX) ? offsetX : left + Number(offsetX), isUndefined(offsetY) ? offsetY : top + Number(offsetY));\n  },\n\n  /**\n   * Move the canvas to an absolute point\n   * @param {number} x - The x-axis coordinate.\n   * @param {number} [y=x] - The y-axis coordinate.\n   * @returns {Cropper} this\n   */\n  moveTo: function moveTo(x) {\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n    var canvasData = this.canvasData;\n    var changed = false;\n    x = Number(x);\n    y = Number(y);\n\n    if (this.ready && !this.disabled && this.options.movable) {\n      if (isNumber(x)) {\n        canvasData.left = x;\n        changed = true;\n      }\n\n      if (isNumber(y)) {\n        canvasData.top = y;\n        changed = true;\n      }\n\n      if (changed) {\n        this.renderCanvas(true);\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Zoom the canvas with a relative ratio\n   * @param {number} ratio - The target ratio.\n   * @param {Event} _originalEvent - The original event if any.\n   * @returns {Cropper} this\n   */\n  zoom: function zoom(ratio, _originalEvent) {\n    var canvasData = this.canvasData;\n    ratio = Number(ratio);\n\n    if (ratio < 0) {\n      ratio = 1 / (1 - ratio);\n    } else {\n      ratio = 1 + ratio;\n    }\n\n    return this.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, null, _originalEvent);\n  },\n\n  /**\n   * Zoom the canvas to an absolute ratio\n   * @param {number} ratio - The target ratio.\n   * @param {Object} pivot - The zoom pivot point coordinate.\n   * @param {Event} _originalEvent - The original event if any.\n   * @returns {Cropper} this\n   */\n  zoomTo: function zoomTo(ratio, pivot, _originalEvent) {\n    var options = this.options,\n        canvasData = this.canvasData;\n    var width = canvasData.width,\n        height = canvasData.height,\n        naturalWidth = canvasData.naturalWidth,\n        naturalHeight = canvasData.naturalHeight;\n    ratio = Number(ratio);\n\n    if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\n      var newWidth = naturalWidth * ratio;\n      var newHeight = naturalHeight * ratio;\n\n      if (dispatchEvent(this.element, EVENT_ZOOM, {\n        ratio: ratio,\n        oldRatio: width / naturalWidth,\n        originalEvent: _originalEvent\n      }) === false) {\n        return this;\n      }\n\n      if (_originalEvent) {\n        var pointers = this.pointers;\n        var offset = getOffset(this.cropper);\n        var center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\n          pageX: _originalEvent.pageX,\n          pageY: _originalEvent.pageY\n        }; // Zoom from the triggering point of the event\n\n        canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\n        canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\n      } else if (isPlainObject(pivot) && isNumber(pivot.x) && isNumber(pivot.y)) {\n        canvasData.left -= (newWidth - width) * ((pivot.x - canvasData.left) / width);\n        canvasData.top -= (newHeight - height) * ((pivot.y - canvasData.top) / height);\n      } else {\n        // Zoom from the center of the canvas\n        canvasData.left -= (newWidth - width) / 2;\n        canvasData.top -= (newHeight - height) / 2;\n      }\n\n      canvasData.width = newWidth;\n      canvasData.height = newHeight;\n      this.renderCanvas(true);\n    }\n\n    return this;\n  },\n\n  /**\n   * Rotate the canvas with a relative degree\n   * @param {number} degree - The rotate degree.\n   * @returns {Cropper} this\n   */\n  rotate: function rotate(degree) {\n    return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\n  },\n\n  /**\n   * Rotate the canvas to an absolute degree\n   * @param {number} degree - The rotate degree.\n   * @returns {Cropper} this\n   */\n  rotateTo: function rotateTo(degree) {\n    degree = Number(degree);\n\n    if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\n      this.imageData.rotate = degree % 360;\n      this.renderCanvas(true, true);\n    }\n\n    return this;\n  },\n\n  /**\n   * Scale the image on the x-axis.\n   * @param {number} scaleX - The scale ratio on the x-axis.\n   * @returns {Cropper} this\n   */\n  scaleX: function scaleX(_scaleX) {\n    var scaleY = this.imageData.scaleY;\n    return this.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\n  },\n\n  /**\n   * Scale the image on the y-axis.\n   * @param {number} scaleY - The scale ratio on the y-axis.\n   * @returns {Cropper} this\n   */\n  scaleY: function scaleY(_scaleY) {\n    var scaleX = this.imageData.scaleX;\n    return this.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\n  },\n\n  /**\n   * Scale the image\n   * @param {number} scaleX - The scale ratio on the x-axis.\n   * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\n   * @returns {Cropper} this\n   */\n  scale: function scale(scaleX) {\n    var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n    var imageData = this.imageData;\n    var transformed = false;\n    scaleX = Number(scaleX);\n    scaleY = Number(scaleY);\n\n    if (this.ready && !this.disabled && this.options.scalable) {\n      if (isNumber(scaleX)) {\n        imageData.scaleX = scaleX;\n        transformed = true;\n      }\n\n      if (isNumber(scaleY)) {\n        imageData.scaleY = scaleY;\n        transformed = true;\n      }\n\n      if (transformed) {\n        this.renderCanvas(true, true);\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Get the cropped area position and size data (base on the original image)\n   * @param {boolean} [rounded=false] - Indicate if round the data values or not.\n   * @returns {Object} The result cropped data.\n   */\n  getData: function getData$$1() {\n    var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var options = this.options,\n        imageData = this.imageData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n    var data;\n\n    if (this.ready && this.cropped) {\n      data = {\n        x: cropBoxData.left - canvasData.left,\n        y: cropBoxData.top - canvasData.top,\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      };\n      var ratio = imageData.width / imageData.naturalWidth;\n      forEach(data, function (n, i) {\n        data[i] = n / ratio;\n      });\n\n      if (rounded) {\n        // In case rounding off leads to extra 1px in right or bottom border\n        // we should round the top-left corner and the dimension (#343).\n        var bottom = Math.round(data.y + data.height);\n        var right = Math.round(data.x + data.width);\n        data.x = Math.round(data.x);\n        data.y = Math.round(data.y);\n        data.width = right - data.x;\n        data.height = bottom - data.y;\n      }\n    } else {\n      data = {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n      };\n    }\n\n    if (options.rotatable) {\n      data.rotate = imageData.rotate || 0;\n    }\n\n    if (options.scalable) {\n      data.scaleX = imageData.scaleX || 1;\n      data.scaleY = imageData.scaleY || 1;\n    }\n\n    return data;\n  },\n\n  /**\n   * Set the cropped area position and size with new data\n   * @param {Object} data - The new data.\n   * @returns {Cropper} this\n   */\n  setData: function setData$$1(data) {\n    var options = this.options,\n        imageData = this.imageData,\n        canvasData = this.canvasData;\n    var cropBoxData = {};\n\n    if (this.ready && !this.disabled && isPlainObject(data)) {\n      var transformed = false;\n\n      if (options.rotatable) {\n        if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n          imageData.rotate = data.rotate;\n          transformed = true;\n        }\n      }\n\n      if (options.scalable) {\n        if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n          imageData.scaleX = data.scaleX;\n          transformed = true;\n        }\n\n        if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n          imageData.scaleY = data.scaleY;\n          transformed = true;\n        }\n      }\n\n      if (transformed) {\n        this.renderCanvas(true, true);\n      }\n\n      var ratio = imageData.width / imageData.naturalWidth;\n\n      if (isNumber(data.x)) {\n        cropBoxData.left = data.x * ratio + canvasData.left;\n      }\n\n      if (isNumber(data.y)) {\n        cropBoxData.top = data.y * ratio + canvasData.top;\n      }\n\n      if (isNumber(data.width)) {\n        cropBoxData.width = data.width * ratio;\n      }\n\n      if (isNumber(data.height)) {\n        cropBoxData.height = data.height * ratio;\n      }\n\n      this.setCropBoxData(cropBoxData);\n    }\n\n    return this;\n  },\n\n  /**\n   * Get the container size data.\n   * @returns {Object} The result container data.\n   */\n  getContainerData: function getContainerData() {\n    return this.ready ? assign({}, this.containerData) : {};\n  },\n\n  /**\n   * Get the image position and size data.\n   * @returns {Object} The result image data.\n   */\n  getImageData: function getImageData() {\n    return this.sized ? assign({}, this.imageData) : {};\n  },\n\n  /**\n   * Get the canvas position and size data.\n   * @returns {Object} The result canvas data.\n   */\n  getCanvasData: function getCanvasData() {\n    var canvasData = this.canvasData;\n    var data = {};\n\n    if (this.ready) {\n      forEach(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\n        data[n] = canvasData[n];\n      });\n    }\n\n    return data;\n  },\n\n  /**\n   * Set the canvas position and size with new data.\n   * @param {Object} data - The new canvas data.\n   * @returns {Cropper} this\n   */\n  setCanvasData: function setCanvasData(data) {\n    var canvasData = this.canvasData;\n    var aspectRatio = canvasData.aspectRatio;\n\n    if (this.ready && !this.disabled && isPlainObject(data)) {\n      if (isNumber(data.left)) {\n        canvasData.left = data.left;\n      }\n\n      if (isNumber(data.top)) {\n        canvasData.top = data.top;\n      }\n\n      if (isNumber(data.width)) {\n        canvasData.width = data.width;\n        canvasData.height = data.width / aspectRatio;\n      } else if (isNumber(data.height)) {\n        canvasData.height = data.height;\n        canvasData.width = data.height * aspectRatio;\n      }\n\n      this.renderCanvas(true);\n    }\n\n    return this;\n  },\n\n  /**\n   * Get the crop box position and size data.\n   * @returns {Object} The result crop box data.\n   */\n  getCropBoxData: function getCropBoxData() {\n    var cropBoxData = this.cropBoxData;\n    var data;\n\n    if (this.ready && this.cropped) {\n      data = {\n        left: cropBoxData.left,\n        top: cropBoxData.top,\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      };\n    }\n\n    return data || {};\n  },\n\n  /**\n   * Set the crop box position and size with new data.\n   * @param {Object} data - The new crop box data.\n   * @returns {Cropper} this\n   */\n  setCropBoxData: function setCropBoxData(data) {\n    var cropBoxData = this.cropBoxData;\n    var aspectRatio = this.options.aspectRatio;\n    var widthChanged;\n    var heightChanged;\n\n    if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\n      if (isNumber(data.left)) {\n        cropBoxData.left = data.left;\n      }\n\n      if (isNumber(data.top)) {\n        cropBoxData.top = data.top;\n      }\n\n      if (isNumber(data.width) && data.width !== cropBoxData.width) {\n        widthChanged = true;\n        cropBoxData.width = data.width;\n      }\n\n      if (isNumber(data.height) && data.height !== cropBoxData.height) {\n        heightChanged = true;\n        cropBoxData.height = data.height;\n      }\n\n      if (aspectRatio) {\n        if (widthChanged) {\n          cropBoxData.height = cropBoxData.width / aspectRatio;\n        } else if (heightChanged) {\n          cropBoxData.width = cropBoxData.height * aspectRatio;\n        }\n      }\n\n      this.renderCropBox();\n    }\n\n    return this;\n  },\n\n  /**\n   * Get a canvas drawn the cropped image.\n   * @param {Object} [options={}] - The config options.\n   * @returns {HTMLCanvasElement} - The result canvas.\n   */\n  getCroppedCanvas: function getCroppedCanvas() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (!this.ready || !window.HTMLCanvasElement) {\n      return null;\n    }\n\n    var canvasData = this.canvasData;\n    var source = getSourceCanvas(this.image, this.imageData, canvasData, options); // Returns the source canvas if it is not cropped.\n\n    if (!this.cropped) {\n      return source;\n    }\n\n    var _this$getData = this.getData(),\n        initialX = _this$getData.x,\n        initialY = _this$getData.y,\n        initialWidth = _this$getData.width,\n        initialHeight = _this$getData.height;\n\n    var ratio = source.width / Math.floor(canvasData.naturalWidth);\n\n    if (ratio !== 1) {\n      initialX *= ratio;\n      initialY *= ratio;\n      initialWidth *= ratio;\n      initialHeight *= ratio;\n    }\n\n    var aspectRatio = initialWidth / initialHeight;\n    var maxSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: options.maxWidth || Infinity,\n      height: options.maxHeight || Infinity\n    });\n    var minSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: options.minWidth || 0,\n      height: options.minHeight || 0\n    }, 'cover');\n\n    var _getAdjustedSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: options.width || (ratio !== 1 ? source.width : initialWidth),\n      height: options.height || (ratio !== 1 ? source.height : initialHeight)\n    }),\n        width = _getAdjustedSizes.width,\n        height = _getAdjustedSizes.height;\n\n    width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\n    height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n    canvas.width = normalizeDecimalNumber(width);\n    canvas.height = normalizeDecimalNumber(height);\n    context.fillStyle = options.fillColor || 'transparent';\n    context.fillRect(0, 0, width, height);\n    var _options$imageSmoothi = options.imageSmoothingEnabled,\n        imageSmoothingEnabled = _options$imageSmoothi === void 0 ? true : _options$imageSmoothi,\n        imageSmoothingQuality = options.imageSmoothingQuality;\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\n\n    if (imageSmoothingQuality) {\n      context.imageSmoothingQuality = imageSmoothingQuality;\n    } // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n\n\n    var sourceWidth = source.width;\n    var sourceHeight = source.height; // Source canvas parameters\n\n    var srcX = initialX;\n    var srcY = initialY;\n    var srcWidth;\n    var srcHeight; // Destination canvas parameters\n\n    var dstX;\n    var dstY;\n    var dstWidth;\n    var dstHeight;\n\n    if (srcX <= -initialWidth || srcX > sourceWidth) {\n      srcX = 0;\n      srcWidth = 0;\n      dstX = 0;\n      dstWidth = 0;\n    } else if (srcX <= 0) {\n      dstX = -srcX;\n      srcX = 0;\n      srcWidth = Math.min(sourceWidth, initialWidth + srcX);\n      dstWidth = srcWidth;\n    } else if (srcX <= sourceWidth) {\n      dstX = 0;\n      srcWidth = Math.min(initialWidth, sourceWidth - srcX);\n      dstWidth = srcWidth;\n    }\n\n    if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\n      srcY = 0;\n      srcHeight = 0;\n      dstY = 0;\n      dstHeight = 0;\n    } else if (srcY <= 0) {\n      dstY = -srcY;\n      srcY = 0;\n      srcHeight = Math.min(sourceHeight, initialHeight + srcY);\n      dstHeight = srcHeight;\n    } else if (srcY <= sourceHeight) {\n      dstY = 0;\n      srcHeight = Math.min(initialHeight, sourceHeight - srcY);\n      dstHeight = srcHeight;\n    }\n\n    var params = [srcX, srcY, srcWidth, srcHeight]; // Avoid \"IndexSizeError\"\n\n    if (dstWidth > 0 && dstHeight > 0) {\n      var scale = width / initialWidth;\n      params.push(dstX * scale, dstY * scale, dstWidth * scale, dstHeight * scale);\n    } // All the numerical parameters should be integer for `drawImage`\n    // https://github.com/fengyuanchen/cropper/issues/476\n\n\n    context.drawImage.apply(context, [source].concat(_toConsumableArray(params.map(function (param) {\n      return Math.floor(normalizeDecimalNumber(param));\n    }))));\n    return canvas;\n  },\n\n  /**\n   * Change the aspect ratio of the crop box.\n   * @param {number} aspectRatio - The new aspect ratio.\n   * @returns {Cropper} this\n   */\n  setAspectRatio: function setAspectRatio(aspectRatio) {\n    var options = this.options;\n\n    if (!this.disabled && !isUndefined(aspectRatio)) {\n      // 0 -> NaN\n      options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n\n      if (this.ready) {\n        this.initCropBox();\n\n        if (this.cropped) {\n          this.renderCropBox();\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Change the drag mode.\n   * @param {string} mode - The new drag mode.\n   * @returns {Cropper} this\n   */\n  setDragMode: function setDragMode(mode) {\n    var options = this.options,\n        dragBox = this.dragBox,\n        face = this.face;\n\n    if (this.ready && !this.disabled) {\n      var croppable = mode === DRAG_MODE_CROP;\n      var movable = options.movable && mode === DRAG_MODE_MOVE;\n      mode = croppable || movable ? mode : DRAG_MODE_NONE;\n      options.dragMode = mode;\n      setData(dragBox, DATA_ACTION, mode);\n      toggleClass(dragBox, CLASS_CROP, croppable);\n      toggleClass(dragBox, CLASS_MOVE, movable);\n\n      if (!options.cropBoxMovable) {\n        // Sync drag mode to crop box when it is not movable\n        setData(face, DATA_ACTION, mode);\n        toggleClass(face, CLASS_CROP, croppable);\n        toggleClass(face, CLASS_MOVE, movable);\n      }\n    }\n\n    return this;\n  }\n};\n\nvar AnotherCropper = WINDOW.Cropper;\n\nvar Cropper =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create a new Cropper.\n   * @param {Element} element - The target element for cropping.\n   * @param {Object} [options={}] - The configuration options.\n   */\n  function Cropper(element) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Cropper);\n\n    if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\n      throw new Error('The first argument is required and must be an <img> or <canvas> element.');\n    }\n\n    this.element = element;\n    this.options = assign({}, DEFAULTS, isPlainObject(options) && options);\n    this.cropped = false;\n    this.disabled = false;\n    this.pointers = {};\n    this.ready = false;\n    this.reloading = false;\n    this.replaced = false;\n    this.sized = false;\n    this.sizing = false;\n    this.init();\n  }\n\n  _createClass(Cropper, [{\n    key: \"init\",\n    value: function init() {\n      var element = this.element;\n      var tagName = element.tagName.toLowerCase();\n      var url;\n\n      if (element[NAMESPACE]) {\n        return;\n      }\n\n      element[NAMESPACE] = this;\n\n      if (tagName === 'img') {\n        this.isImg = true; // e.g.: \"img/picture.jpg\"\n\n        url = element.getAttribute('src') || '';\n        this.originalUrl = url; // Stop when it's a blank image\n\n        if (!url) {\n          return;\n        } // e.g.: \"http://example.com/img/picture.jpg\"\n\n\n        url = element.src;\n      } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n        url = element.toDataURL();\n      }\n\n      this.load(url);\n    }\n  }, {\n    key: \"load\",\n    value: function load(url) {\n      var _this = this;\n\n      if (!url) {\n        return;\n      }\n\n      this.url = url;\n      this.imageData = {};\n      var element = this.element,\n          options = this.options;\n\n      if (!options.rotatable && !options.scalable) {\n        options.checkOrientation = false;\n      } // Only IE10+ supports Typed Arrays\n\n\n      if (!options.checkOrientation || !window.ArrayBuffer) {\n        this.clone();\n        return;\n      } // XMLHttpRequest disallows to open a Data URL in some browsers like IE11 and Safari\n\n\n      if (REGEXP_DATA_URL.test(url)) {\n        if (REGEXP_DATA_URL_JPEG.test(url)) {\n          this.read(dataURLToArrayBuffer(url));\n        } else {\n          this.clone();\n        }\n\n        return;\n      }\n\n      var xhr = new XMLHttpRequest();\n      var clone = this.clone.bind(this);\n      this.reloading = true;\n      this.xhr = xhr;\n      xhr.ontimeout = clone;\n      xhr.onabort = clone;\n      xhr.onerror = clone;\n\n      xhr.onprogress = function () {\n        if (xhr.getResponseHeader('content-type') !== MIME_TYPE_JPEG) {\n          xhr.abort();\n        }\n      };\n\n      xhr.onload = function () {\n        _this.read(xhr.response);\n      };\n\n      xhr.onloadend = function () {\n        _this.reloading = false;\n        _this.xhr = null;\n      }; // Bust cache when there is a \"crossOrigin\" property to avoid browser cache error\n\n\n      if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\n        url = addTimestamp(url);\n      }\n\n      xhr.open('GET', url);\n      xhr.responseType = 'arraybuffer';\n      xhr.withCredentials = element.crossOrigin === 'use-credentials';\n      xhr.send();\n    }\n  }, {\n    key: \"read\",\n    value: function read(arrayBuffer) {\n      var options = this.options,\n          imageData = this.imageData;\n      var orientation = resetAndGetOrientation(arrayBuffer);\n      var rotate = 0;\n      var scaleX = 1;\n      var scaleY = 1;\n\n      if (orientation > 1) {\n        // Generate a new Data URL with the orientation value set to 1\n        // as some iOS browsers will render image with its orientation\n        this.url = arrayBufferToDataURL(arrayBuffer, MIME_TYPE_JPEG);\n\n        var _parseOrientation = parseOrientation(orientation);\n\n        rotate = _parseOrientation.rotate;\n        scaleX = _parseOrientation.scaleX;\n        scaleY = _parseOrientation.scaleY;\n      }\n\n      if (options.rotatable) {\n        imageData.rotate = rotate;\n      }\n\n      if (options.scalable) {\n        imageData.scaleX = scaleX;\n        imageData.scaleY = scaleY;\n      }\n\n      this.clone();\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var element = this.element,\n          url = this.url;\n      var crossOrigin;\n      var crossOriginUrl;\n\n      if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\n        crossOrigin = element.crossOrigin;\n\n        if (crossOrigin) {\n          crossOriginUrl = url;\n        } else {\n          crossOrigin = 'anonymous'; // Bust cache when there is not a \"crossOrigin\" property\n\n          crossOriginUrl = addTimestamp(url);\n        }\n      }\n\n      this.crossOrigin = crossOrigin;\n      this.crossOriginUrl = crossOriginUrl;\n      var image = document.createElement('img');\n\n      if (crossOrigin) {\n        image.crossOrigin = crossOrigin;\n      }\n\n      image.src = crossOriginUrl || url;\n      this.image = image;\n      image.onload = this.start.bind(this);\n      image.onerror = this.stop.bind(this);\n      addClass(image, CLASS_HIDE);\n      element.parentNode.insertBefore(image, element.nextSibling);\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      var _this2 = this;\n\n      var image = this.isImg ? this.element : this.image;\n      image.onload = null;\n      image.onerror = null;\n      this.sizing = true;\n      var IS_SAFARI = WINDOW.navigator && /(Macintosh|iPhone|iPod|iPad).*AppleWebKit/i.test(WINDOW.navigator.userAgent);\n\n      var done = function done(naturalWidth, naturalHeight) {\n        assign(_this2.imageData, {\n          naturalWidth: naturalWidth,\n          naturalHeight: naturalHeight,\n          aspectRatio: naturalWidth / naturalHeight\n        });\n        _this2.sizing = false;\n        _this2.sized = true;\n\n        _this2.build();\n      }; // Modern browsers (except Safari)\n\n\n      if (image.naturalWidth && !IS_SAFARI) {\n        done(image.naturalWidth, image.naturalHeight);\n        return;\n      }\n\n      var sizingImage = document.createElement('img');\n      var body = document.body || document.documentElement;\n      this.sizingImage = sizingImage;\n\n      sizingImage.onload = function () {\n        done(sizingImage.width, sizingImage.height);\n\n        if (!IS_SAFARI) {\n          body.removeChild(sizingImage);\n        }\n      };\n\n      sizingImage.src = image.src; // iOS Safari will convert the image automatically\n      // with its orientation once append it into DOM (#279)\n\n      if (!IS_SAFARI) {\n        sizingImage.style.cssText = 'left:0;' + 'max-height:none!important;' + 'max-width:none!important;' + 'min-height:0!important;' + 'min-width:0!important;' + 'opacity:0;' + 'position:absolute;' + 'top:0;' + 'z-index:-1;';\n        body.appendChild(sizingImage);\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      var image = this.image;\n      image.onload = null;\n      image.onerror = null;\n      image.parentNode.removeChild(image);\n      this.image = null;\n    }\n  }, {\n    key: \"build\",\n    value: function build() {\n      if (!this.sized || this.ready) {\n        return;\n      }\n\n      var element = this.element,\n          options = this.options,\n          image = this.image; // Create cropper elements\n\n      var container = element.parentNode;\n      var template = document.createElement('div');\n      template.innerHTML = TEMPLATE;\n      var cropper = template.querySelector(\".\".concat(NAMESPACE, \"-container\"));\n      var canvas = cropper.querySelector(\".\".concat(NAMESPACE, \"-canvas\"));\n      var dragBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-drag-box\"));\n      var cropBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-crop-box\"));\n      var face = cropBox.querySelector(\".\".concat(NAMESPACE, \"-face\"));\n      this.container = container;\n      this.cropper = cropper;\n      this.canvas = canvas;\n      this.dragBox = dragBox;\n      this.cropBox = cropBox;\n      this.viewBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-view-box\"));\n      this.face = face;\n      canvas.appendChild(image); // Hide the original image\n\n      addClass(element, CLASS_HIDDEN); // Inserts the cropper after to the current image\n\n      container.insertBefore(cropper, element.nextSibling); // Show the image if is hidden\n\n      if (!this.isImg) {\n        removeClass(image, CLASS_HIDE);\n      }\n\n      this.initPreview();\n      this.bind();\n      options.initialAspectRatio = Math.max(0, options.initialAspectRatio) || NaN;\n      options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n      options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n      addClass(cropBox, CLASS_HIDDEN);\n\n      if (!options.guides) {\n        addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-dashed\")), CLASS_HIDDEN);\n      }\n\n      if (!options.center) {\n        addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-center\")), CLASS_HIDDEN);\n      }\n\n      if (options.background) {\n        addClass(cropper, \"\".concat(NAMESPACE, \"-bg\"));\n      }\n\n      if (!options.highlight) {\n        addClass(face, CLASS_INVISIBLE);\n      }\n\n      if (options.cropBoxMovable) {\n        addClass(face, CLASS_MOVE);\n        setData(face, DATA_ACTION, ACTION_ALL);\n      }\n\n      if (!options.cropBoxResizable) {\n        addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-line\")), CLASS_HIDDEN);\n        addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-point\")), CLASS_HIDDEN);\n      }\n\n      this.render();\n      this.ready = true;\n      this.setDragMode(options.dragMode);\n\n      if (options.autoCrop) {\n        this.crop();\n      }\n\n      this.setData(options.data);\n\n      if (isFunction(options.ready)) {\n        addListener(element, EVENT_READY, options.ready, {\n          once: true\n        });\n      }\n\n      dispatchEvent(element, EVENT_READY);\n    }\n  }, {\n    key: \"unbuild\",\n    value: function unbuild() {\n      if (!this.ready) {\n        return;\n      }\n\n      this.ready = false;\n      this.unbind();\n      this.resetPreview();\n      this.cropper.parentNode.removeChild(this.cropper);\n      removeClass(this.element, CLASS_HIDDEN);\n    }\n  }, {\n    key: \"uncreate\",\n    value: function uncreate() {\n      if (this.ready) {\n        this.unbuild();\n        this.ready = false;\n        this.cropped = false;\n      } else if (this.sizing) {\n        this.sizingImage.onload = null;\n        this.sizing = false;\n        this.sized = false;\n      } else if (this.reloading) {\n        this.xhr.onabort = null;\n        this.xhr.abort();\n      } else if (this.image) {\n        this.stop();\n      }\n    }\n    /**\n     * Get the no conflict cropper class.\n     * @returns {Cropper} The cropper class.\n     */\n\n  }], [{\n    key: \"noConflict\",\n    value: function noConflict() {\n      window.Cropper = AnotherCropper;\n      return Cropper;\n    }\n    /**\n     * Change the default options.\n     * @param {Object} options - The new default options.\n     */\n\n  }, {\n    key: \"setDefaults\",\n    value: function setDefaults(options) {\n      assign(DEFAULTS, isPlainObject(options) && options);\n    }\n  }]);\n\n  return Cropper;\n}();\n\nassign(Cropper.prototype, render, preview, events, handlers, change, methods);\n\nexport default Cropper;\n","!function(t,r){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=r():\"function\"==typeof define&&define.amd?define(r):t.MedianCut=r()}(this,function(){\"use strict\";var t=function(t){var r=document.createElement(\"canvas\").getContext(\"2d\");this.imagedata=r.createImageData(t.width,t.height),this.imagedata.data.set(t.data),this.raw=this.imagedata.data,this.width=this.imagedata.width,this.height=this.imagedata.height,this.colors=this._getColorInfo(),this.cubes=[]};return t.prototype._setProperty=function(t){for(var r=0,e=0,o=0,a=0,s=255,h=255,i=255,n=0;n<t.length;n++){var l=t[n];e=Math.max(l.r,e),o=Math.max(l.g,o),a=Math.max(l.b,a),s=Math.min(l.r,s),h=Math.min(l.g,h),i=Math.min(l.b,i),r+=l.uses}var u=1.2*(e-s),c=1.2*(o-h),g=a-i,d=\"r\";return c<u&&g<u&&(d=\"r\"),u<c&&g<c&&(d=\"g\"),u<g&&c<g&&(d=\"b\"),{color:t,total:r,type:d}},t.prototype._mediancut=function(t,r){for(var e=0,o=0,a=0;a<t.length;a++)t[a].total>e&&1!=t[a].color.length&&(e=t[o=a].total);if(1==t[o].total)return console.error(\"Cube could not be split.\"),t;if(1==t[o].color.length)return console.error(\"Cube could not be split.\"),t;var s=t[o].type;t[o].color.sort(function(t,r){return t[s]<r[s]?-1:t[s]>r[s]?1:0});for(var h=Math.floor((t[o].color.length+1)/2),i=[],n=[],l=0;l<t[o].color.length;l++)l<h?i[i.length]=t[o].color[l]:n[n.length]=t[o].color[l];i=this._setProperty(i),n=this._setProperty(n);for(var u=[],c=0;c<t.length;c++)c!=o&&(u[u.length]=t[c]);return u[u.length]=i,u[u.length]=n,u.length<r?this._mediancut(u,r):u},t.prototype._getColorInfo=function(){for(var t,r=0,e={},o=0;o<this.height;o++)for(var a=0;a<this.width;a++){var s=this.raw[r]+\",\"+this.raw[r+1]+\",\"+this.raw[r+2];e[s]?e[s]+=1:e[s]=1,r+=4}var h=[];for(var i in e)t=i.split(\",\"),h[h.length]={r:parseInt(t[0],10),g:parseInt(t[1],10),b:parseInt(t[2],10),uses:e[i]};return h},t.prototype.getIndexColors=function(){for(var t=[],r=0;r<this.cubes.length;r++){for(var e=0,o=0,a=0,s=0,h=0;h<this.cubes[r].color.length;h++){var i=this.cubes[r].color[h];o+=i.r*i.uses,a+=i.g*i.uses,s+=i.b*i.uses,e+=i.uses}t[r]={r:Math.round(o/e),g:Math.round(a/e),b:Math.round(s/e)}}return t},t.prototype.run=function(t){this.colors.length<=t&&console.error(\"It has already been reduced color.\");var r=[this._setProperty(this.colors)];this.cubes=this._mediancut(r,t);for(var e=this.getIndexColors(),o={},a=0;a<this.cubes.length;a++)for(var s=0;s<this.cubes[a].color.length;s++){var h=this.cubes[a].color[s];o[h.r+\",\"+h.g+\",\"+h.b]={r:e[a].r,g:e[a].g,b:e[a].b}}for(var i=\"\",n=0,l=0;l<this.height;l++)for(var u=0;u<this.width;u++)i=this.raw[n]+\",\"+this.raw[n+1]+\",\"+this.raw[n+2],this.raw[n]=o[i].r,this.raw[n+1]=o[i].g,this.raw[n+2]=o[i].b,n+=4;return this.imagedata},t});\n","import Cropper from 'cropperjs'\nimport MedianCut from 'mediancut';\n\n// canvasサイズ\nconst CANVAS_SIZE = 32;\n// 表示時のグリッドのサイズ\nconst GRID_SIZE = 20;\n// 表示用canvasサイズ\nconst CANVAS_DISP_SIZE = CANVAS_SIZE * GRID_SIZE;\n// 減色時の色数\nconst K_NUM = 16;\n// MGOでのカラーパレット用の除数\nconst DIVISOR = 8.21;\n\nexport default class Cluster {\n  constructor() {\n    this.cropper = null;\n\n    // カラーコードのリスト\n    this.highlightList = [];\n    this.colorList = [];\n\n    // canvas\n    this.canvasHidden = null;\n    this.canvasHighlight = document.getElementById('result-highlight');\n    this.canvasGrid = document.getElementById('result-grid');\n    this.canvasResult = document.querySelector('#result');\n    this.canvasCropper = document.getElementById('cropper-canvas');\n  }\n\n  /**\n   * 初期化処理\n   */\n  init() {\n    let uploadArea = document.getElementById('upload-area');\n    uploadArea.addEventListener('change', (e) => {\n      this.changeHandler(e);\n    });\n    uploadArea.addEventListener('dragenter', (e) => { e.preventDefault(); });\n    uploadArea.addEventListener('dragover', (e) => { e.preventDefault(); });\n    uploadArea.addEventListener('dragleave', (e) => { e.preventDefault(); });\n    uploadArea.addEventListener('drop', (e) => {\n      e.preventDefault();\n      this.changeHandler(e, e.dataTransfer.files[0]);\n    });\n\n    document.getElementById('run-btn').addEventListener('click', (e) => {\n      this.run();\n    });\n\n    // グリッドの表示\n    this.drawGrid();\n  }\n\n  /**\n   * 画像アップロード時のcallback\n   */\n  changeHandler(e, data) {\n    // drag and dropの場合は e.dataTransfer.files[0] を使用\n    let file = data === undefined ? e.target.files[0] : data;\n\n    // 拡張子チェック\n    if (!file.type.match(/^image\\/(png|jpg|jpeg|gif)$/)) {\n      return;\n    }\n\n    // 容量チェック(5MB)\n    if (5 * 1024 * 1024 <= file.size) {\n      return;\n    }\n\n    let image = new Image();\n    let fileReader = new FileReader();\n\n    fileReader.onload = (e) => {\n      let base64 = e.target.result;\n\n      image.onload = () => {\n        this.canvasCropper.width = image.width;\n        this.canvasCropper.height = image.height;\n        let originalCtx = this.canvasCropper.getContext('2d');\n\n        // s:sourceImage, d:destinationCanvas\n        // ctx.drawImage(image, sx, sy, sw, sh, dx, dy, dw, dh)\n        originalCtx.drawImage(image, 0, 0, image.width, image.height, 0, 0, image.width, image.height);\n\n        // cropperの表示\n        this.showResult();\n\n        // cropperの設定\n        this.cropper = new Cropper(this.canvasCropper, {\n          aspectRatio: 1,\n          preview: '.cropper-preview__img',\n          crop: (e) => {\n            this.canvasHidden = document.createElement('canvas');\n            let ctx = this.canvasHidden.getContext('2d');\n            ctx.clearRect(0, 0, CANVAS_SIZE, CANVAS_SIZE);\n            ctx.drawImage(this.canvasCropper,\n              e.detail.x,\n              e.detail.y,\n              e.detail.width,\n              e.detail.height,\n              0,\n              0,\n              CANVAS_SIZE,\n              CANVAS_SIZE\n            );\n          }\n        });\n      };\n      image.src = base64;\n    };\n\n    fileReader.readAsDataURL(file);\n  }\n\n  /**\n   * 画像のクラスタリングを実行\n   */\n  run() {\n    // 前のハイライトをクリア\n    this.clearHighlight();\n\n    let ctx = this.canvasHidden.getContext('2d');\n    let data = ctx.getImageData(0, 0, CANVAS_SIZE, CANVAS_SIZE).data;\n    let len = CANVAS_SIZE * CANVAS_SIZE;\n    let w = [];\n    for (let i = 0; i < len; i++) {\n      w[i] = [\n        data[(i*4)],\n        data[(i*4)+1],\n        data[(i*4)+2],\n        data[(i*4)+3]\n      ];\n    }\n\n    let imagedata = ctx.getImageData(0, 0, CANVAS_SIZE, CANVAS_SIZE);\n    // Obtain color information of image (画像のカラー情報の取得)\n    // let colors = this.getColorInfo(imagedata);\n\n    // reduced color (減色)\n    let medianCut = new MedianCut(imagedata);\n    imagedata = medianCut.run(16);\n    // カラーリストの取得\n    this.colorList = medianCut.getIndexColors();\n\n    let resultCtx = this.canvasResult.getContext('2d');\n    resultCtx.clearRect(0, 0, 320, 320);\n    resultCtx.beginPath();\n\n    for (let i = 0; i < len; i++) {\n      resultCtx.fillStyle = `rgba(${ imagedata.data[i*4] }, ${ imagedata.data[i*4+1] }, ${ imagedata.data[i*4+2] }, ${ imagedata.data[i*4+3] })`;\n      resultCtx.fillRect((i % CANVAS_SIZE) * GRID_SIZE, Math.floor(i / CANVAS_SIZE) * GRID_SIZE, GRID_SIZE, GRID_SIZE);\n\n      for (let j = 0, jLen = this.colorList.length; j < jLen; j++) {\n        if (imagedata.data[i*4] == this.colorList[j]['r']\n            && imagedata.data[i*4+1] == this.colorList[j]['g']\n              && imagedata.data[i*4+2] == this.colorList[j]['b']) {\n                this.highlightList[i] = j;\n        }\n      }\n    }\n\n    this.showColors();\n  }\n\n  /**\n   * カラーリストの表示\n   */\n  showColors() {\n    // カラーリストの削除\n    let list = document.querySelector('.colors-list');\n    let list_child = document.querySelectorAll('.colors-list li');\n    if (list_child.length) {\n      for (let i = 0; i < list_child.length; i++) {\n        list.removeChild(list_child[i]);\n      }\n    }\n\n    // カラーリストの追加処理\n    let fragment = document.createDocumentFragment();\n    for(let i = 0, len = this.colorList.length; i < len; i++){\n      let li = document.createElement('li');\n      li.style.backgroundColor = `rgba(${ this.colorList[i]['r'] }, ${ this.colorList[i]['g'] }, ${ this.colorList[i]['b'] }, 1)`\n      fragment.appendChild(li); // fragmentの追加する\n    }\n    list.appendChild(fragment);\n\n    // イベント設定\n    let colors = document.querySelectorAll('.colors-list li');\n    for (let i = 0; i < colors.length; i++) {\n      colors[i].addEventListener('click', () => {\n        this.highlightColor(i);\n      })\n    }\n  }\n\n  /**\n   * グリッドの描画\n   */\n  drawGrid() {\n    let ctx = this.canvasGrid.getContext('2d');\n    ctx.strokeStyle = 'rgba(255, 255, 255, 1)';\n\n    let size = CANVAS_DISP_SIZE;\n    for (let i = 0; i <= size; i+=GRID_SIZE) {\n      if (i != 0 && i != size) {\n        if (i % 160 === 0) {\n          ctx.strokeStyle = 'rgba(255, 255, 255, 1)';\n          ctx.lineWidth = 6;\n        } else {\n          ctx.strokeStyle = 'rgba(255, 255, 255, 1)';\n          ctx.lineWidth = 1;\n        }\n        // 縦\n        ctx.beginPath();\n        ctx.moveTo(i, 0);\n        ctx.lineTo(i, size);\n        // 横\n        ctx.moveTo(0, i);\n        ctx.lineTo(size, i);\n        ctx.stroke();\n      }\n    }\n  }\n\n  /**\n   * ハイライトのクリア\n   */\n   clearHighlight() {\n     let ctx = this.canvasHighlight.getContext('2d');\n     ctx.clearRect(0, 0, CANVAS_DISP_SIZE, CANVAS_DISP_SIZE);\n   }\n\n  /**\n   * 選択色のハイライト\n   */\n  highlightColor(colorIndex) {\n    // アクティブ表示\n    let colors = document.querySelectorAll('.colors-list li');\n    for (let i = 0; i < colors.length; i++) {\n      if (i == colorIndex) {\n        colors[i].classList.add('active');\n      } else {\n        colors[i].classList.remove('active');\n      }\n    }\n\n    // カラーコードの表示\n    this.updateColorCode(this.colorList[colorIndex]);\n\n    // canvasの選択色のハイライト\n    let ctx = this.canvasHighlight.getContext('2d');\n    ctx.clearRect(0, 0, CANVAS_DISP_SIZE, CANVAS_DISP_SIZE);\n    ctx.beginPath();\n    ctx.fillStyle = `rgba(0, 0, 0, .7)`;\n    ctx.strokeStyle = 'rgba(255, 255, 255, 1)';\n\n    let len = CANVAS_SIZE * CANVAS_SIZE;\n    for (let i = 0; i < len; i++) {\n      if (this.highlightList[i] != colorIndex) {\n        ctx.fillRect((i % CANVAS_SIZE) * GRID_SIZE, Math.floor(i / CANVAS_SIZE) * GRID_SIZE, GRID_SIZE, GRID_SIZE);\n      } else {\n        ctx.rect((i % CANVAS_SIZE) * GRID_SIZE, Math.floor(i / CANVAS_SIZE) * GRID_SIZE, GRID_SIZE, GRID_SIZE);\n        ctx.stroke();\n      }\n    }\n  }\n\n  /**\n   * カラーコードの更新\n   */\n  updateColorCode(color) {\n    document.getElementById('red-cc-bar').style.width = `${ (color['r'] / 255) * 100}%`;\n    document.getElementById('red-cc-number').innerHTML = `${ Math.round(color['r'] / DIVISOR) } (${ color['r'] })`;\n    document.getElementById('green-cc-bar').style.width = `${ (color['g'] / 255) * 100}%`;\n    document.getElementById('green-cc-number').innerHTML = `${ Math.round(color['g'] / DIVISOR) } (${ color['g'] })`;\n    document.getElementById('blue-cc-bar').style.width = `${ (color['b'] / 255) * 100}%`;\n    document.getElementById('blue-cc-number').innerHTML = `${ Math.round(color['b'] / DIVISOR) } (${ color['b'] })`;\n  }\n\n  /**\n   * 減色部分の表示\n   */\n  showResult() {\n    document.getElementById('upload-area').classList.add('hide');\n    document.getElementById('uploaded-area').classList.add('show');\n  }\n\n\n  /**\n   * カラー情報の取得\n   */\n  getColorInfo(imagedata) {\n    let height = imagedata.height;\n    let width = imagedata.width;\n    let raw = imagedata.data;\n\n    // 使用色/使用回数(面積)を取得\n    let cnt = 0;\n    let uses_colors = new Object;\n\n    for (let i = 0; i < height; i++) {\n      for (let j = 0; j < width; j++) {\n        let key = raw[cnt] + ',' + raw[cnt + 1] + ',' + raw[cnt + 2];\n        if (!uses_colors[key]) uses_colors[key] = 1;\n        else uses_colors[key] += 1;\n\n        cnt = cnt + 4;\n      }\n    }\n\n    // 連想配列を配列へ設定\n    let rgb;\n    let colors = new Array();\n    for (let key in uses_colors) {\n      rgb = key.split(\",\");\n      colors[colors.length] = {\n        'r': parseInt(rgb[0], 10),\n        'g': parseInt(rgb[1], 10),\n        'b': parseInt(rgb[2], 10),\n        'uses': uses_colors[key]\n      }; // 使用数\n    }\n    return colors;\n  }\n}\n","// css\nimport \"reset-css/reset.css\";\nimport \"cropperjs/dist/cropper.css\";\nimport '../scss/style.scss';\n\nimport Cluster from './Cluster';\n\nwindow.addEventListener('DOMContentLoaded', () => {\n  let cluster = new Cluster();\n  cluster.init();\n});\n"]}